<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YxFramwork</name>
    </assembly>
    <members>
        <member name="T:YxFramwork.Common.Adapters.YxBaseAdapter">
            <summary>
            适配器基类
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Adapters.YxBaseAdapter.UIType">
            <summary>
            ui类型
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Adapters.YxBaseButtonAdapter">
            <summary>
            按钮适配器
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Adapters.YxBaseButtonAdapter.SetSkinName(System.String)">
            <summary>
            设置皮肤
            </summary>
            <param name="skinName"></param>
        </member>
        <member name="M:YxFramwork.Common.Adapters.YxBaseButtonAdapter.SetLabel(System.String)">
            <summary>
            设置label名称
            </summary>
            <param name="content"></param>
        </member>
        <member name="T:YxFramwork.Common.App">
            <summary>
            框架使用的全局变量
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.HistoryPath">
            <summary>
            当前状态
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.CheckVersion">
            <summary>
            检测主版本号
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.DevGameServer">
            <summary>
            测试强制使用的服务器地址
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.AppStyle">
            <summary>
            简约版
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.UserId">
            <summary>
            当前用户ID
            </summary>
        </member>
        <member name="P:YxFramwork.Common.App.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.GameServer">
            <summary>
            服务器地址
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.ServerId">
            <summary>
            服务器ID，在创建房间和查找房间的地方，会记录服务器ID
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.RoomId">
            <summary>
            房间id
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.GameKey">
            <summary>
            GameKey
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.LastGameKey">
            <summary>
            上次玩的游戏Key
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.IsGameLoadFromHall">
            <summary>
            Loading 是否从大厅加载游戏
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.IsRejoin">
            <summary>
            是否正在重连
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.BootEnv">
            <summary>
            游戏的启动参数
            </summary>
        </member>
        <member name="P:YxFramwork.Common.App.Config">
            <summary>
            获取系统配置
            </summary>
        </member>
        <member name="P:YxFramwork.Common.App.UI">
            <summary>
            处理UI的接口
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.ServerTime">
            <summary>
            服务器时间
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.RequestWaitTime">
            <summary>
            交互等待时间
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.PingPongLag">
            <summary>
            心跳间隔
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.HallName">
            <summary>
            大厅的资源名
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.CurrentGameName">
            <summary>
            当前使用的游戏名称。大厅就是大厅名字。游戏中就是游戏名字
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.LoadingGameName">
            <summary>
            大厅中预加载游戏/游戏中返回大厅的时候。加载资源对应游戏/大厅的名字。
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.GameListPath">
            <summary>
            游戏资源路径 todo 删掉
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.RoomListPath">
            <summary>
            房间资源路径 todo 删掉
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.RuleListPath">
            <summary>
            规则资源路径 todo 删掉
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.LagValue">
            <summary>
            响应时间（ping）ms
            </summary>
        </member>
        <member name="P:YxFramwork.Common.App.ShowGoldRate">
            <summary>
            汇率
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.IsInTeaHouse">
            <summary>
            是否在茶馆
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.NetWorkBreakTime">
            <summary>
            网络超时时间，时间到了自动断开连接。如果设置为0 表示不启用该功能
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.InitLoadResPath">
            <summary>
            开发模式
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.GetGameDataPath(System.String)">
            <summary>
            取得游戏数据存放目录
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.GetLoadResPath(System.String)">
            <summary>
            取得游戏数据存放目录， 会与gameDataPath略有不同
            </summary>
            <param name="gameName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.App.GetResUrl(System.String)">
            <summary>
            获取资源下载路径
            </summary>
            <param name="gameName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.App.GetConfigUrl(System.String)">
            <summary>
            获取配置文件路径
            </summary>
            <param name="gameName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.App.QuitGameWithMsgBox">
            <summary>
            退出弹框
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.QuitGame(System.Action{System.Object})">
            <summary>
            退出游戏
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.FromHall">
            <summary>
            是否从大厅启动
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.OnQuitGame">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.OnQuitGame(System.Boolean)">
            <summary>
            唯一退出
            </summary>
            <param name="isInterrupt">阻断退出</param>
        </member>
        <member name="M:YxFramwork.Common.App.ReBackLogin">
            <summary>
            返回登录
            </summary>
        </member>
        <member name="P:YxFramwork.Common.App.HasLogin">
            <summary>
            是否登陆
            </summary>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.App.BundleIdentifier">
            <summary>
            bundleIdentifier
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.GetGameData``1">
            <summary>
            获取游戏类型数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.App.GameData">
            <summary>
            获取游戏数据
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.GcGameData">
            <summary>
            销毁游戏数据
            </summary>
        </member>
        <member name="M:YxFramwork.Common.App.GetRServer``1">
            <summary>
            获得交互实例
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.App.RServer">
            <summary>
            获得交互实例
            </summary>
        </member>
        <member name="P:YxFramwork.Common.App.GameManager">
            <summary>
            游戏管理器
            </summary>
        </member>
        <member name="F:YxFramwork.Common.App.YxPlatForm">
            <summary>
            开发模拟平台
            </summary>
        </member>
        <member name="T:YxFramwork.Common.AudioDb">
            <inheritdoc />
            <summary>
            声音资源
            </summary>
        </member>
        <member name="F:YxFramwork.Common.AudioDb.DefEffectValue">
            <summary>
            默认音效音量大小
            </summary>
        </member>
        <member name="F:YxFramwork.Common.AudioDb.DefMusicValue">
            <summary>
            默认音乐音量大小
            </summary>
        </member>
        <member name="F:YxFramwork.Common.AudioDb.DefPlayerValue">
            <summary>
            默认音乐音量大小
            </summary>
        </member>
        <member name="F:YxFramwork.Common.AudioDb.BackGroundMusicNames">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.BackGroundMusicData">
            <summary>
            背景音乐数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.BackGroundMusicData.AudioName">
            <summary>
            音频名称
            </summary>
        </member>
        <member name="F:YxFramwork.Common.BackGroundMusicData.Source">
            <summary>
            文件夹
            </summary>
        </member>
        <member name="T:YxFramwork.Common.OneFloat">
            <summary>
            
            </summary>
            <param name="pragress"></param>
            <param name="name"></param>
        </member>
        <member name="T:YxFramwork.Common.OneString">
            <summary>
            
            </summary>
            <param name="pram"></param>
        </member>
        <member name="T:YxFramwork.Common.DownLoadTool">
            <summary>
            下载辅助
            </summary>
        </member>
        <member name="F:YxFramwork.Common.DownLoadTool.IsDownLoad">
            <summary>
            是否正在下载
            </summary>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.DownLoad(YxFramwork.Common.ResLoadData,System.Action)">
            <summary>
            下载
            </summary>
            <param name="data">下载数据</param>
            <param name="onFinishCallBack"></param>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.DownLoad(System.Collections.Generic.IList{YxFramwork.Common.ResLoadData},System.Action)">
            <param name="datas"></param>
            <param name="onFinishCallBack"></param>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.ShowDownLoadInfo(System.Int64)">
            <summary>
            下载提示信息
            </summary>
            <param name="downLoadSize"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.OnUpdateResource(System.Collections.Generic.IList{YxFramwork.Common.ResLoadData},YxFramwork.Common.ResLoadInfo,YxFramwork.Common.ResLoadInfo)">
            <summary>
            解析配置文件
            </summary>
            <param name="datas">数据</param>
            <param name="downLoadInfo">需要下载的容器</param>
            <param name="decomInfo">需要解压的容器</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.ReadConfig(System.String,YxFramwork.Common.ResLoadData,YxFramwork.Common.ResLoadInfo,YxFramwork.Common.ResLoadInfo,YxFramwork.Common.DeleteAssistInfo)">
            <summary>
            解析配置文件并过滤
            </summary>
            <param name="dataPath"></param>
            <param name="data"></param>
            <param name="downLoadInfo">下载容器</param>
            <param name="decomInfo">解压容器</param>
            <param name="deleteInfo"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.DownLoadRes(YxFramwork.Common.ResLoadInfo,YxFramwork.Common.ResLoadInfo)">
            <summary>
            下载资源
            </summary>
            <param name="downLoadInfo"></param>
            <param name="decomInfo"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.DecompressFileLzma(YxFramwork.Common.ResLoadInfo)">
            <summary>
            解压文件
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.LoadMainfest(System.String,YxFramwork.Common.OneString)">
            <summary>
            
            </summary> 
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.PreloadingAssetBundle(System.Collections.Generic.IList{YxFramwork.Common.ResLoadData})">
            <summary>
            预加载资源
            </summary>
            <param name="datas"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.DownAndSave(System.String,System.String,System.Action{System.Single,System.Int64},System.Action{System.String},System.Action,System.Boolean)">
            <summary>
            下载其他内容
            </summary>
            <param name="url"></param>
            <param name="saveName"></param>
            <param name="onUpdateProgress"></param>
            <param name="callBack"></param>
            <param name="noWifiCallBack"></param>
            <param name="checkNetType"></param>
        </member>
        <member name="M:YxFramwork.Common.DownLoadTool.LoadFile(System.String,System.Action{System.Byte[]})">
            <summary>
            加载文件
            </summary>
        </member>
        <member name="T:YxFramwork.Common.ResLoadInfo">
            <summary>
            需要下载的
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadInfo.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadInfo.ResInfoList">
            <summary>
            需要下载的资源
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadInfo.NeedCacheFlag">
            <summary>
            需要缓存标记
            </summary>
        </member>
        <member name="T:YxFramwork.Common.ResLoadData">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadData.Filter">
            <summary>
            过滤器
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadData.SkinName">
            <summary>
            资源的类别
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadData.OnDownLoadFiled">
            <summary>
            下载失败回调
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadData.OnDownLoadSuccess">
            <summary>
            下载成功回调
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadData.CheckNetType">
            <summary>
            是否检查网络
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadData.NeedPreLoad">
            <summary>
            是否预加载
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResLoadData.HasSceneBundle">
            <summary>
            预加载的扩展资源
            </summary>
        </member>
        <member name="T:YxFramwork.Common.ResDataInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResDataInfo.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResDataInfo.Md5">
            <summary>
            md5
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResDataInfo.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResDataInfo.Localfile">
            <summary>
            本地路径
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResDataInfo.Extension">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResDataInfo.SkinName">
            <summary>
            所属皮肤
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ResDataInfo.HasDownload">
            <summary>
            已下完
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Md5Info">
            <summary>
            Md5信息
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Md5Info.Md5">
            <summary>
            Md5值
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Md5Info.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Md5Info.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Md5Info.IsValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="T:YxFramwork.Common.DownLoadAssistInfo">
            <summary>
            下载信息
            </summary>
        </member>
        <member name="T:YxFramwork.Common.DecompressInfo">
            <summary>
            解压
            </summary>
        </member>
        <member name="F:YxFramwork.Common.DeleteAssistInfo.NewFiles">
            <summary>
            key：文件名，value：gamekey
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Enter">
            <summary>
            游戏应用入口
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.GameKey">
            <summary>
            游戏对应的名称。加载所用，区别不同的加载路径
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.FrameRate">
            <summary>
            游戏帧率
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.ScreenRotate">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.ScreenSize">
            <summary>
            窗口大小
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.IsScreenFull">
            <summary>
            是否全屏
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.DebugState">
            <summary>
            是否调试模式
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.DevePlatForm">
            <summary>
            开发模拟平台
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Enter.NeedCloseCurtain">
            <summary>
            需要关闭幕布
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Enter.Awake">
            <summary>
            游戏入口，请勿覆盖
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Enter.OnAwake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Enter.GetSystemCfg">
            <summary>
            获取系统配置
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Enter.GetUIImpl">
            <summary>
            获取NGUI相关信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Enter.LogInSmart(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:YxFramwork.Common.EnterHall" -->
        <member name="F:YxFramwork.Common.EnterHall.DebugState">
            <summary>
            是否调试
            </summary>
        </member>
        <member name="F:YxFramwork.Common.EnterHall.ScreenRotate">
            <summary>
            旋转状态
            </summary>
        </member>
        <member name="F:YxFramwork.Common.EnterHall.DefCurtain">
             <summary>
            默认过场动画
             </summary>
        </member>
        <member name="F:YxFramwork.Common.EnterHall.DefMsgBox">
            <summary>
            默认弹框
            </summary>
        </member>
        <member name="F:YxFramwork.Common.EnterHall.IsScreenFull">
            <summary>
            是否全屏
            </summary>
        </member>
        <member name="F:YxFramwork.Common.EnterHall.ScreenSize">
            <summary>
            窗口大小
            </summary>
        </member>
        <member name="F:YxFramwork.Common.EnterHall.DevePlatForm">
            <summary>
            开发模拟平台
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.Awake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.OnAwake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.OnStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.GetCfg">
            <summary>
            获取配置文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.CheckVersion">
            <summary>
            检查版本
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.UpdateVersion(System.String,System.String,System.Boolean,System.String)">
            <summary>
            更新版本
            </summary>
            <param name="url"></param>
            <param name="newVersion"></param>
            <param name="forceUp"></param>
            <param name="saveName"></param>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.OnLoadFailed(System.String)">
            <summary>
            
            </summary>
            <param name="gameName"></param>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.LaunchGame(YxFramwork.Common.ResLoadData)">
            <summary>
            启动游戏 
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.LaunchHall">
            <summary>
            启动大厅
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.PreLoadGame">
            <summary>
            预加载游戏
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.LoadServerData">
            <summary>
            获取服务器有关数据
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.LaunchDownRes">
            <summary>
            第一次启动
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.DownLoadHRes">
            <summary>
            下载资源
            </summary>
        </member>
        <member name="M:YxFramwork.Common.EnterHall.OnFilterRes(YxFramwork.Common.ResLoadData)">
            <summary>
            过滤掉不用的资源
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.GetSwitchValue(System.String)">
            <summary>
            开关的值，只有0和1
            该方法主要是为了方便读配置文件
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.ChangeLayer(UnityEngine.Transform)">
            <summary>
            把所有孩子的layer都变成父亲的layer
            </summary>
            <param name="tf"></param>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.ChangeLayer(UnityEngine.Transform,System.Int32)">
            <summary>
            把所有孩子的layer都变成指定的层
            </summary>
            <param name="tf"></param>
            <param name="layer"></param>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.ConvertServerTimestamp2DateTime(System.Int64)">
            <summary>
            将服务器时间戳转化为DateTime
            </summary>
            <param name="serverTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.Encryption(System.Byte[],System.Int32)">
            <summary>
            加密/解密
            </summary>
            <param name="content"></param>
            <param name="length">0到指定的长度，未指定（-1）则整个数组长度</param>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.StringEncryption(System.String,System.Text.Encoding)">
            <summary>
            加密字符串
            </summary>
            <param name="content"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.StringDeciphering(System.String,System.Text.Encoding)">
            <summary>
            解密字符串
            </summary>
            <param name="content"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.Copy(System.String)">
            <summary>
            复制
            </summary>
        </member>
        <member name="M:YxFramwork.Common.GlobalUtils.Paste">
            <summary>
            粘贴
            </summary>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Common.Interface.IGameStart">
            <summary>
            框架完成必须的网络交互和初始化之后。通知游戏开始
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Interface.IGameStart.GameStart">
            <summary>
            游戏可以开始了。进行初始化
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Interface.IUI">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Interface.IUI.CreateUI(System.Int32)">
            <summary>
            NGUI create Camera
            </summary>
            <param name="layer">UI Layer</param>
        </member>
        <member name="T:YxFramwork.Common.Interface.ISysCfg">
            <summary>
            
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.IsDeve">
            <summary>
            是否开发模式
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.HasCache">
            <summary>
            是否有缓存
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.StartCfgUrl">
            <summary>
            启动配置文件Url
            </summary>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.VersionUrl">
            <summary>
            获取游戏的版本号
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.ServerPort">
            <summary>
            端口
            </summary>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.ServerUrl">
            <summary>
            服务器
            </summary>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.WebUrl">
            <summary>
            Web服务器
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Interface.ISysCfg.ResUrl(System.String)">
            <summary>
            资源路径
            </summary>
            <param name="skinName">皮肤的名称</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Interface.ISysCfg.ResCfgUrl(System.String)">
            <summary>
            配置路径
            </summary>
            <param name="skinName">皮肤的名称</param>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.GateWay">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.WxAppId">
            <summary>
            微信AppId
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.QqAppId">
            <summary>
            QQAppID
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Interface.ISysCfg.GetUrlWithServer(System.String,System.String)">
            <summary>
            获取请求路径
            </summary>
            <param name="subfield">分支</param>
            <param name="getParameter">get参数</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Interface.ISysCfg.SkinNames">
            <summary>
            获取资源名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Interface.ISysCfg.LoadConfig(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            解析配置
            </summary>
            <param name="dict"></param>
        </member>
        <member name="M:YxFramwork.Common.Interface.ISysCfg.GetFullLoginUrl">
            <summary>
            登录url
            </summary>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.HasWechatLogin">
            <summary>
            是否有微信登录
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.HasQqLogin">
            <summary>
            是否有qq登录
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.IsDebug">
            <summary>
            是否为debug模式
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.LogUserId">
            <summary>
            指定userid使用log
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.LogUrl">
            <summary>
            log服务器
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.IsLoadLocalRes">
            <summary>
            加载本地资源
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.NeedCheckNetType">
            <summary>
            是否检测网络
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.NeedRollNotice">
            <summary>
            是否需要广播
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.FrameRate">
            <summary>
            游戏帧率
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Interface.ISysCfg.QuitToLogin">
            <summary>
            大厅退出时是否返回登录界面
            </summary>
        </member>
        <member name="T:YxFramwork.Common.NumberLabel">
            <summary>
            
            </summary> 
        </member>
        <member name="M:YxFramwork.Common.NumberLabel.SetNumber(System.Int64)">
            <summary>
            
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:YxFramwork.Common.NumberLabel.SetNumber(System.Int64,System.Single,System.Int32,System.Action,System.Action{System.Int64})">
            <summary>
            
            </summary>
            <param name="number"></param>
            <param name="processTime"></param>
            <param name="count"></param>
            <param name="onFinish"></param>
            <param name="onTimes"></param>
        </member>
        <member name="T:YxFramwork.Common.Interloper">
            <summary>
            切换关卡时用
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Interloper.SetMessage(System.String)">
            <summary>
            设置进度内容
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:YxFramwork.Common.Interloper.SetProgress(System.Single)">
            <summary>
            设置进度
            </summary>
            <param name="rate"></param>
        </member>
        <member name="T:YxFramwork.Common.Launcher">
            <summary>
            todo 启动器
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Launcher.GameType">
            <summary>
            类别，可用来加载资源时的标志
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.HallModel">
            <summary>
            大厅模型
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.HallModel.HallLogoTitle">
            <summary>
            logo（左）
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.HallModel.HallLogoMiddle">
            <summary>
            log （中）
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.HallModel.OptionSwitch">
            <summary>
            开关
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.OptionSwitch">
            <summary>
            开关数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.OptionSwitch.HallMenue">
            <summary>
            大厅菜单
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.OptionSwitch.Task">
            <summary>
            任务
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.OptionSwitch.AutoPopWin">
            <summary>
            自动弹出窗口
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.GameListModel">
            <summary>
            游戏列表数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameListModel.CurGroup">
            <summary>
            当前的组
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameListModel.Groups">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameListModel.GameUnitModels">
            <summary>
            所有gamekey
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.GameListModel.Convert(System.Object)">
            <summary>
            转换数据
            </summary>
            <param name="directory"></param>
        </member>
        <member name="M:YxFramwork.Common.Model.GameListModel.FilterGameList">
            <summary>
            过滤
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.GameListModel.GetGroup(System.Int32)">
            <summary>
            获取一个组
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Model.GameListModel.GetNamedStateGameModel(YxFramwork.Common.Model.GameState)">
            <summary>
            获取指定状态的数据
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Common.Model.GameUnitModel">
            <summary>
            大厅游戏列表
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameUnitModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameUnitModel.GameName">
            <summary>
            游戏名称
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameUnitModel.GameKey">
            <summary>
            游戏key
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameUnitModel.RoomKind">
            <summary>
            房间类型（0：默认，1->）
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Model.GameUnitModel.GameState">
            <summary>
            获取状态
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameUnitModel.IsShow">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.GameUnitModel.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.GameState">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameState.None">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameState.Developing">
            <summary>
            开发中
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameState.CreateMode">
            <summary>
            创建模式
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameState.Match">
            <summary>
            比赛模式
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameState.NeedDownLoad">
            <summary>
            需要下载
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GameState.NeedUpdate">
            <summary>
            需要更新
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.IsDownLoadGameModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.IsDownLoadGameModel.isDownLoadModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.IsDownLoadModelUnit">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.GamelistGroupData">
            <summary>
            游戏分组数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GamelistGroupData.Group">
            <summary>
            索引
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GamelistGroupData.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GamelistGroupData.Key">
            <summary>
            key
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GamelistGroupData.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GamelistGroupData.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.GamelistGroupData.GameListModels">
            <summary>
            游戏列表
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.GamelistGroupData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,YxFramwork.Common.Model.GameUnitModel})">
            <summary>
            
            </summary>
            <param name="dict"></param>
            <param name="gamekeys"></param>
        </member>
        <member name="M:YxFramwork.Common.Model.GamelistGroupData.GetGameList">
            <summary>
            获取指定的游戏列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Common.Model.LoginInfo">
            <summary>
            各种数据。。。。。。后期目标，通过json 自动生成model类
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.LoginInfo.user_id">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.LoginInfo.login_m">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.LoginInfo.ctoken">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.LoginInfo.token">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.LoginInfo.gamehost">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.LoginInfo.G_MobileHallServerText">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.LoginInfo.G_noShowMoilePay">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.RankModel">
            <summary>
            排行模型
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RankModel.rankModelList">
            <summary>
            排行数据列表
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.RankModel.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.RankModelUnit">
            <summary>
            排行数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RankModelUnit.nick_m">
            <summary>
            昵称
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RankModelUnit.coin_a">
            <summary>
            金币
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RankModelUnit.sex_i">
            <summary>
            性别
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.RoomListModel">
            <summary>
            房间信息数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomListModel.RoomUnitModel">
            <summary>
            房间数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomListModel.RoomKind">
            <summary>
            房间类型（0：默认，1：创建模式）
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.RoomListModel.Convert(System.Object)">
            <summary>
            数据转换
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:YxFramwork.Common.Model.RoomListModel.#ctor">
            <summary>
            房间数据
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.RoomUnitModel">
            <summary>
            房间数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.Ante">
            <summary>
            底注
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.RoomName">
            <summary>
            房间名字
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.TypeId">
            <summary>
            房间id
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.MinGold">
            <summary>
            最小金币
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.MaxGold">
            <summary>
            最大金币
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.Config">
            <summary>
            配置信息
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.GameKey">
            <summary>
            GameKey
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.RoomUnitModel.IconUrl">
            <summary>
            图标url
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.RoomUnitModel.#ctor(System.Object)">
            <summary>
            初始化数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:YxFramwork.Common.Model.ShopModel">
            <summary>
            商品数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModel.GoodsTyps">
            <summary>
            
            </summary> 
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModel.Goodses">
            <summary>
            商品数据
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.ShopModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.ShopModelUnit">
            <summary>
            商店单元数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.Kind">
            <summary>
            种类
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.IconUrl">
            <summary>
            图片url
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.Currency">
            <summary>
            货币
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.CurrencyType">
            <summary>
            货币类型
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.SaleDiscount">
            <summary>
            折扣 (大于0:请除100，小于0:请减去)
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.ClickUrl">
            <summary>
            物品是否在网页中购买
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.IsHot">
            <summary>
            是否是热卖
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopModelUnit.ShopUnitList">
            <summary>
            信息
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Model.ShopGoodsItemModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopGoodsItemModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.ShopGoodsItemModel.Num">
            <summary>
            个数
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.ShopGoodsItemModel.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.ShopGoodsItemModel.Init(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            初始化
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:YxFramwork.Common.Model.UserInfoModel">
            <summary>
            玩家相关数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfoModel.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfoModel.BackPack">
            <summary>
            背包信息
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.UserInfoModel.Convert(System.Object)">
            <summary>
            刷新数据
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:YxFramwork.Common.Model.UserInfoModel.ConvertBackPack(System.Object)">
            <summary>
            解析背包
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:YxFramwork.Common.Model.UserInfo">
            <summary>
            玩家信息
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.UserId">
            <summary>
            用户id号
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.NickM">
            <summary>
            昵称
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.LoginM">
            <summary>
            登录名
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.CoinA">
            <summary>
            金币
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.CashA">
            <summary>
            元宝
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.CouponA">
            <summary>
            奖券
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.LevelN">
            <summary>
            等级
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.AvatarX">
            <summary>
            头像
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.SexI">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.MobileN">
            <summary>
            手机号
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.WeChatS">
            <summary>
            微信
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.BankCoin">
            <summary>
            银行存款
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.Signature">
            <summary>
            签名
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.SaleInfo">
            <summary>
            销售
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.ClientIP">
            <summary>
            本地ip
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.IsOnLine">
            <summary>
            是否在线
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.FriendMsgStatusI">
            <summary>
            好友状态
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.FriendMsgProposer">
            <summary>
            好友申请人
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.FriendMsgAccepter">
            <summary>
            好友接收人
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.Promoter">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.PromoterId">
            <summary>
            推广码
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Model.UserInfo.Excrate">
            <summary>
            汇率
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.UserInfo.Parse(System.Collections.IDictionary)">
            <summary>
            转换数据
            </summary>
            <param name="dic"></param>
        </member>
        <member name="T:YxFramwork.Common.Model.BackPackInfo">
            <summary>
            背包
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Model.BackPackInfo.GetItem(System.String)">
            <summary>
            获取个数
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Model.BackPackInfo.DeleteItem(System.String,System.Int32)">
            <summary>
            删除物品
            </summary>
            <param name="id">物品id</param>
            <param name="count">删除个数</param>
        </member>
        <member name="M:YxFramwork.Common.Model.BackPackInfo.AddItem(System.String,System.Int32)">
            <summary>
            添加物品
            </summary>
            <param name="id"></param>
            <param name="count"></param>
        </member>
        <member name="M:YxFramwork.Common.Model.BackPackInfo.GetKeys">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Model.BackPackInfo.ChangeBpItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            背包变化
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="T:YxFramwork.Common.PropertyAttributes.FlagEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.PropertyAttributes.FlagEnum.IntValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.PropertyAttributes.FlagEnum.#ctor(System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.StirNumberLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.StirNumberLabel.Number">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.StirNumberLabel.Label">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.StirNumberLabel.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.StirNumberLabel.SetNumber(System.Int64)">
            <summary>
            设置值
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:YxFramwork.Common.StirNumberLabel.Show(System.Int64)">
            <summary>
            
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:YxFramwork.Common.StirNumberLabel.SetNumber(System.Int64,System.Single,System.Int32,System.Action,System.Action{System.Int64})">
            <summary>
            设置数字(动画)
            </summary>
            <param name="number">最终数</param>
            <param name="processTime">动画时间</param>
            <param name="count">次数</param>
            <param name="onFinish">完成回调</param>
            <param name="onTimes">每次变更回调</param>
        </member>
        <member name="T:YxFramwork.Common.Utils.I18NUtile">
            <summary>
            语言工具
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.I18NUtile.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.I18NUtile.GetText(System.String,System.Object[])">
            <summary>
            获取文本
            </summary>
            <param name="id">文本id</param>
            <param name="args"></param>
            <returns>id对应的内容</returns>
        </member>
        <member name="T:YxFramwork.Common.Utils.YxGameData">
            <summary>
            游戏数据类
            说明：游戏中使用的全局属性都需要放在此处，以便统一管理
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxGameData.SeatTotalCount">
            <summary>
            游戏最大人数
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxGameData._selfSeat">
            <summary>
            自己的座位
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Utils.YxGameData.SelfSeat">
            <summary>
            自己的座位,使用前请设置SeatTotalCount
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxGameData.GStatus">
            <summary>
            游戏状态
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxGameData.GetLocalSeat(System.Int32,System.Int32)">
            <summary>
            求本地座位
            </summary>
            <param name="serverSeat">服务器座位</param>
            <param name="localstart">自己的本地位置</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxGameData.Gc">
            <summary>
            销毁
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Utils.GameStatus">
            <summary>
            游戏状态
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.GameStatus.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.GameStatus.Ready">
            <summary>
            准备
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.GameStatus.Play">
            <summary>
            游戏中
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.GameStatus.PlayAndConfine">
            <summary>
            游戏中并禁锢
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.GameStatus.Over">
            <summary>
            结束
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Utils.ScreenRotateInfo">
            <summary>
            屏幕旋转
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Utils.ScreenRotateInfo.ScreenRotateState">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ScreenRotateInfo.ScreenRotateState.Portrait">
            <summary>
            竖屏
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ScreenRotateInfo.ScreenRotateState.PortraitUpsideDown">
            <summary>
            反向竖屏
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ScreenRotateInfo.ScreenRotateState.LandscapeLeft">
            <summary>
            横屏 home左
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ScreenRotateInfo.ScreenRotateState.LandscapeRight">
            <summary>
            横屏 home右
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.ScreenRotateInfo.SetDefaultRotate(YxFramwork.Common.Utils.ScreenRotateInfo.ScreenRotateState)">
            <summary>
            设置默认方向
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:YxFramwork.Common.Utils.ScreenRotateInfo.AutorotateState(YxFramwork.Common.Utils.ScreenRotateInfo.ScreenRotateState)">
            <summary>
            设置屏幕方向
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Utils.YxPlaySound">
            <summary>
            播放声音工具
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.SoundName">
            <summary>
            音频名称
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.HverOverSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.HoverOutSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.PressSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.ReleaseSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.SelectSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.DeselectSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.ClickSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.DoubleClickSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.DragStartSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.DragOverSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.DragOutSName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.YxPlaySound.DragEndSName">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxHoverOver">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxHoverOut">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxPress">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxRelease">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxSelect">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxDeselect">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxClick">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxDoubleClick">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxDragStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxDragOver">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxDragOut">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.YxPlaySound.OnYxDragEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Utils.CursorDimLocation">
            <summary>
            鼠标样式
            </summary>
        </member>
        <member name="T:YxFramwork.Common.Utils.ProductConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ProductConfig.ServerUrl">
            <summary>
            服务器url
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ProductConfig.WebUrl">
            <summary>
            弹出页面url
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ProductConfig.ResUrl">
            <summary>
            资源url
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ProductConfig.CfgUrl">
            <summary>
            资源配置url
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ProductConfig.AppId">
            <summary>
            应用分享id
            </summary>
        </member>
        <member name="F:YxFramwork.Common.Utils.ProductConfig.HasWechatLogin">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.ProductConfig.LoadConfig(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            读取配置
            </summary>
            <param name="dict"></param>
        </member>
        <member name="T:YxFramwork.Common.Utils.Util">
            <summary>
            公共辅助类
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetMainCamera(System.String)">
            <summary>
            获取主相机
            </summary>
            <param name="tag">标签</param>
            <returns>返回主相机</returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.SetScreenResolution(UnityEngine.Vector2,System.Boolean)">
            <summary>
            设置屏幕大小
            </summary>
            <param name="size"></param>
            <param name="isFull"></param>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetDeviceId">
            <summary>
            获取设备ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.LoadSpriteByPath(System.String,System.Int32,System.Int32)">
            <summary>
            通过路径加载Sprite
            </summary>
            <param name="path">路径</param>
            <param name="width">宽度</param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.LoadSpriteByName(System.String)">
            <summary>
            通过名字加载Sprite
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetSpriteByTexture(UnityEngine.Texture2D)">
            <summary>
            通过图片
            </summary>
            <param name="texture"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetGameObjectPath(UnityEngine.GameObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetGameObjectPath(UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="praent"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Float(System.Object)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Uid(System.String)">
            <summary>
            
            </summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Get``1(UnityEngine.GameObject,System.String)">
            <summary>
            搜索子物体组件-GameObject版
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Get``1(UnityEngine.Transform,System.String)">
            <summary>
            搜索子物体组件-Transform版
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Get``1(UnityEngine.Component,System.String)">
            <summary>
            搜索子物体组件-Component版
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Add``1(UnityEngine.GameObject)">
            <summary>
            添加组件
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Add``1(UnityEngine.Transform)">
            <summary>
            添加组件
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Child(UnityEngine.GameObject,System.String)">
            <summary>
            查找子对象
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Child(UnityEngine.Transform,System.String)">
            <summary>
            查找子对象
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Peer(UnityEngine.GameObject,System.String)">
            <summary>
            取平级对象
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Peer(UnityEngine.Transform,System.String)">
            <summary>
            取平级对象
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Vibrate">
            <summary>
            手机震动
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Encode(System.String)">
            <summary>
            Base64编码
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Decode(System.String)">
            <summary>
            Base64解码
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.HashToMd5Hex(System.String)">
            <summary>
            HashToMD5Hex
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Md5(System.String)">
            <summary>
            计算字符串的MD5值
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.Md5File(System.String)">
            <summary>
            计算文件的MD5值
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.ClearChild(UnityEngine.Transform)">
            <summary>
            清除所有子节点
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetKey(System.String)">
            <summary>
            生成一个Key名
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetInt(System.String)">
            <summary>
            取得整型
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.HasKey(System.String)">
            <summary>
            有没有值
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.SetInt(System.String,System.Int32)">
            <summary>
            保存整型
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetString(System.String,System.String)">
            <summary>
            取得数据
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.SetString(System.String,System.String)">
            <summary>
            保存数据
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.RemoveData(System.String)">
            <summary>
            删除数据
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.GetFileText(System.String)">
            <summary>
            取得行文本
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Utils.Util.NetAvailable">
            <summary>
            网络可用
            </summary>
        </member>
        <member name="P:YxFramwork.Common.Utils.Util.IsWifi">
            <summary>
            是否是无线
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.AddComponent(UnityEngine.GameObject,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="go"></param>
            <param name="assembly"></param>
            <param name="classname"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.LoadPrefab(System.String)">
            <summary>
            载入Prefab
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.CheckEnvironment">
            <summary>
            检查运行环境
            </summary>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.ClearGameObjectChild(UnityEngine.GameObject)">
            <summary>
            
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.CopyFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sourceDirectory"></param>
            <param name="destDirectory"></param>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.CopyDirectory(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sourceDirectory"></param>
            <param name="destDirectory"></param>
        </member>
        <member name="M:YxFramwork.Common.Utils.Util.ClearMemory">
            <summary>
            清理内存
            </summary>
        </member>
        <member name="T:YxFramwork.Common.ZipDb">
            <summary>
            压缩资源，是可以拆分的
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ZipDb.ZipDatas">
            <summary>
            压缩数据
            </summary>
        </member>
        <member name="T:YxFramwork.Common.ZipData">
            <summary>
            压缩数据
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ZipData.Name">
            <summary>
            压缩名
            </summary>
        </member>
        <member name="F:YxFramwork.Common.ZipData.Datas">
            <summary>
            压缩中数据
            </summary>
        </member>
        <member name="T:YxFramwork.Common.YxMsgAcion">
            <summary>
            消息回调处理函数
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:YxFramwork.Common.YxMsgCenterHandler">
            <summary>
            消息监听/发送中心
            </summary>
        </member>
        <member name="M:YxFramwork.Common.YxMsgCenterHandler.GetIntance">
            <summary>
            获取消息YxMsgCenterHandler实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Common.YxMsgCenterHandler.AddListener(System.String,YxFramwork.Common.YxMsgAcion,System.Boolean)">
            <summary>
            添加监听
            </summary>
            <param name="yxMsgPram"></param>
            <param name="yxMsgAction"></param>
            <param name="isOnly"></param>
        </member>
        <member name="M:YxFramwork.Common.YxMsgCenterHandler.RemoveListener(System.String)">
            <summary>
            移除监听
            </summary>
            <param name="msg">消息名</param>
        </member>
        <member name="M:YxFramwork.Common.YxMsgCenterHandler.FireEvent(YxFramwork.Common.YxMsgPram)">
            <summary>
            发送消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:YxFramwork.Common.YxMsgCenterHandler.FireEvent(System.String)">
            <summary>
            发送一条消息。让监听能够触发
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:YxFramwork.Common.YxMsgCenterHandler.FireEvent(System.String,System.Object)">
            <summary>
            发送一条消息。让监听能够触发
            </summary>
            <param name="msg">消息名称</param>
            <param name="pram">消息接收者获取的参数</param>
        </member>
        <member name="M:YxFramwork.Common.YxMsgCenterHandler.Clear">
            <summary>
            清理所有事件
            </summary>
        </member>
        <member name="T:YxFramwork.ConstDefine.TransConst">
            <summary>
            交互type常量
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstKeepSession">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstGameList">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstUserInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstOnlineUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstRoomList">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstTalk">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstZhuanZhang">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstTiXian">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstMiMa">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstChangeInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstZoneMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstJoinMatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstExitMatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstMatchNumChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstMatchGameStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstGameTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstVIPActionMSG">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstSendMail">
            <summary>
            客户端发送邮件
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstMailList">
            <summary>
            客户端邮件列表
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstNewMail">
            <summary>
            通知客户端有新邮件
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstCreateRoom">
            <summary>
            获取创建房间的参数
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.RqstFindRoom">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.TransConst.MaxRqst">
            <summary>
            最大请求数字
            </summary>
        </member>
        <member name="T:YxFramwork.ConstDefine.AppConst">
            <summary>
            游戏常量
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PopUpLayerName">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsWxRefreshTokenStr">
            <summary>
            存储微信登陆的refresh token
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsLastLoginTypeInt">
            <summary>
            存储上次登陆的类型 1账号密码，2微信登陆, 3QQ登录 0其他，不需要自动登陆
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsRemenberInt">
            <summary>
            存储，是否记住密码
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsUserNameStr">
            <summary>
            存储，记住的账号
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsPasswordStr">
            <summary>
            存储，记住的密码
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsMusicStr">
            <summary>
            背景音乐记录
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsTencentOpenId">
            <summary>
            存储QQ登录的OpenId
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.AppConst.PlayerPrefsAccessToken">
            <summary>
            存储QQ登录的Token
            </summary>
        </member>
        <member name="T:YxFramwork.ConstDefine.BootKeyConst">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.BootKeyConst.Url">
            <summary>
            服务器地址
            </summary>
        </member>
        <member name="T:YxFramwork.ConstDefine.RequestKey">
            <summary>
            响应key
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyId">
            <summary>
            id
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyType">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeySeat">
            <summary>
            座位号
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyCards">
            <summary>
            牌，数组
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyCard">
            <summary>
            牌
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyCardsArr">
            <summary>
            牌，数组
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyOpCard">
            <summary>
            牌，单个
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyGold">
            <summary>
            金币，或者钱
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyTotalGold">
            <summary>
            金币，总数
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyName">
            <summary>
            名字
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyUserList">
            <summary>
            其他用户
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyUser">
            <summary>
            用户（self）
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.Country">
            <summary>
            地区
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyState">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyPlayerList">
            <summary>
            玩家
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyScore">
            <summary>
            分数
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyCardType">
            <summary>
            胡牌的类型/打牌的类型
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyTingList">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyIsSame">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyPlaying">
            <summary>
            正在游戏标记
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyRoomPasswd">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyGroups">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyExp">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyText">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyMessage">
            <summary>
            后台发回来直接显示的消息
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyMessages">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyRoomType">
            <summary>
            快速开始游戏的Key
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyCode">
            <summary>
            Code 
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyFocus">
            <summary>
            离线状态
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestKey.KeyPingPongs">
            <summary>
            乒乓
            </summary>
        </member>
        <member name="T:YxFramwork.ConstDefine.YxMessageName">
            <summary>
            游戏中事件名称
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.LoginSucceed">
            <summary>
            登陆成功
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.LoginFailed">
            <summary>
            登陆失败
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.ConnectionLost">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.Logout">
            <summary>
            登出
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.GameStart">
            <summary>
            游戏加载完成之后调用
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.ReJoinGame">
            <summary>
            需要重连时的操作
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.NotReJoinGame">
            <summary>
            不需要重连时的操作
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.UserTalk">
            <summary>
            玩家聊天
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.YxMessageName.GetGift">
            <summary>
            在线奖励
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.NotiConst.START_UP">
            <summary>
            Controller层消息通知
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.NotiConst.UPDATE_MESSAGE">
            <summary>
            View层消息通知
            </summary>
        </member>
        <member name="T:YxFramwork.ConstDefine.RequestCmd">
            <summary>
            交互命令
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Login">
            <summary>
            登陆
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Ready">
            <summary>
            玩家准备好 
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.EndAuto">
            <summary>
            解除托管
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.IntoAuto">
            <summary>
            进入托管
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Request">
            <summary>
            正常交互
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.RoomList">
            <summary>
            房间列表
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.JoinRoom">
            <summary>
            加入房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.ReJoinRoom">
            <summary>
            重新加入房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.CheckNeedReJoin">
            <summary>
            检查是否要重新加入房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.UserOutRoom">
            <summary>
            玩家退出
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.RollDice">
            <summary>
            摇色子
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.QuickGame">
            <summary>
            快速游戏
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.GetGames">
            <summary>
            获得游戏列表
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.GetRooms">
            <summary>
            房间列表
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.GameInfo">
            <summary>
            获取房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.BugReport">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.UserTalk">
            <summary>
            聊天
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.CheckRoomPassword">
            <summary>
            检查房间密码
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.GameMessage">
            <summary>
            游戏消息
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.GetServerTime">
            <summary>
            服务器时间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.UserBroadcast">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.HallLastGameKey">
            <summary>
            获取上次GameKey
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.LeaveRoom">
            <summary>
            离开房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Gift">
            <summary>
            在线领取
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Message">
            <summary>
            广播信息
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.CreateRoom">
            <summary>
            创建房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.FindRoom">
            <summary>
            查找房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Laba">
            <summary>
            laba
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Sync">
            <summary>
            同步
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Zonehd">
            <summary>
            房间系列
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Infohd">
            <summary>
            信息系列
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.Matching">
            <summary>
            匹配房间
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.GameContinue">
            <summary>
            游戏是否继续或准备
            </summary>
        </member>
        <member name="F:YxFramwork.ConstDefine.RequestCmd.UserIdle">
            <summary>
            离线状态
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.CombatGainsController">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsController.CurReplayData">
            <summary>
            
            </summary>
        </member>
        <member name="P:YxFramwork.Controller.CombatGainsController.CurGameKey">
            <summary>
            当前的游戏key
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsController.CurType">
            <summary>
            当前的回放类型
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.CombatGainsController.GetGameHistory(System.String,System.Int32,YxFramwork.Manager.TwCallBack)">
            <summary>
            获取战绩
            </summary>
            <param name="gameKey"></param>
            <param name="page"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.CombatGainsController.GetList(System.String,System.Int32,YxFramwork.Manager.TwCallBack)">
            <summary>
            获取列表
            </summary>
            <param name="gameKey"></param>
            <param name="page"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.CombatGainsController.GetGameDetail(System.String,System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            获取回放信息，一张房卡的总成绩
            </summary>
            <param name="gameKey"></param>
            <param name="roomId"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.CombatGainsController.JoinReplay(YxFramwork.Controller.ReplayData,System.String)">
            <summary>
            进入重播
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.ReplayData">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.ReplayData.ReplayId">
            <summary>
            重播id
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.ReplayData.GameKey">
            <summary>
            游戏key
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.ReplayData.Type">
            <summary>
            重播类型
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.ReplayData.DetailData">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.CombatGainsDetailItemData">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsDetailItemData.Index">
            <summary>
            排序
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsDetailItemData.ReplayId">
            <summary>
            重播
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsDetailItemData.CreateDt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsDetailItemData.WebHost">
            <summary>
            重播服务器
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsDetailItemData.Url">
            <summary>
            重播指定url
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsDetailItemData.Score">
            <summary>
            分数
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatGainsDetailItemData.Infos">
            <summary>
            信息
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.CombatGainsDetailItemData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            解析
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:YxFramwork.Controller.CombatGainsDetailItemData.GetFullUrl">
            <summary>
            重播完整路径
            </summary>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Controller.CombatInfoData">
            <summary>
            info数据
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatInfoData.Value">
            <summary>
            获得分 （金币）
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatInfoData.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.CombatInfoData.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.CombatInfoData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            解析
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:YxFramwork.Controller.FriendController">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.FriendController.SendApplyUser(System.Int32,System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            发送确认消息(2同意、3拒绝、4删除)
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.FriendController.SendAddFriend(System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            添加好友
            </summary>
            <param name="userId"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.FriendController.SendDeleteFriend(System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            删除好友
            </summary>
            <param name="userId"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.FriendController.SendFriendList(YxFramwork.Manager.TwCallBack)">
            <summary>
            请求好友列表
            </summary>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.FriendController.SendFindUser(System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            查找用户
            </summary>
            <param name="userLoginName"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.FriendController.SendApplyInfoNote(YxFramwork.Manager.TwCallBack)">
            <summary>
            请求申请消息
            </summary>
            <param name="callBack"></param>
        </member>
        <member name="T:YxFramwork.Controller.HallMainController">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.HallMainController.CallBack">
            <summary>
            返回大厅的事件
            </summary>
            <summary>
            返回大厅的事件
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.ExecuteCallBack">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.HallMainController.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.AddSmartListener(System.String,System.Action{Sfs2X.Entities.Data.ISFSObject},System.String)">
            <summary>
            添加监听事件
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.SendUserNotice(System.String,System.Action{Sfs2X.Entities.Data.ISFSObject})">
            <summary>mainw
            发送玩家喇叭消息
            </summary>
            <param name="msg">发送的消息</param>
            <param name="onCallBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.SendFrameRequest(System.String,System.String,Sfs2X.Entities.Data.ISFSObject,System.Action{Sfs2X.Entities.Data.ISFSObject},System.Boolean)">
            <summary>
            发送消息
            </summary>
            <param name="gameKey"></param>
            <param name="cmd"></param>
            <param name="parm"></param>
            <param name="onCallBack"></param>
            <param name="backWithKey"></param>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.ChangeAccount">
            <summary>
            切换账号
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.OnChangeAccount">
            <summary>
            切换账户
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.LaunchHall(System.Boolean)">
            <summary>
            启动大厅
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.HallMainController.ShowHallMain">
            <summary>
            只显示hallmain
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.HallState">
            <summary>
            大厅的状态
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.HallState.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.HallState.Gamelist">
            <summary>
            游戏列表
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.HallState.Roomlist">
            <summary>
            房间列表
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.PayController">
            <summary>
            支付相关控制类
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.PayController.GetPayInfo(System.Int32,System.String,System.String,YxFramwork.Enums.PayPlatForm,System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.Object})">
            <summary>
            请求服务器数据并调用微信支付
            </summary>
            <param name="dec">描述</param>
            <param name="goodsId">物品id</param>
            <param name="channel">支付渠道</param>
            <param name="paySuccess">支付成功回调</param>
            <param name="payCancel">取消支付回调</param>
            <param name="payFailed">支付失败回调</param>
            <param name="money">钱数</param>
            <param name="urlPay"></param>
        </member>
        <member name="M:YxFramwork.Controller.PayController.UrlPay(System.String,System.Action{System.Object},System.Action{System.Object},System.Action{System.Object},System.Int32)">
            <summary>
            网页充值
            </summary>
            <param name="orderid">订单号</param>
            <param name="OnPaySuccess"></param>
            <param name="OnPayFaile"></param>
            <param name="OnPayWaitting"></param>
            <param name="freshTime">刷新时间</param>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Controller.RoomListController">
            <summary>
            房间列表控制
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.GetRoomList(System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            获取服务器游戏列表 
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.GetRoomlistAndShow(YxFramwork.Common.Model.GameUnitModel)">
            <summary>
            获取游戏列表并进入界面
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.CheckRejoin(YxFramwork.Manager.TwCallBack,System.Boolean)">
            <summary>
            检查网络
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.OnDirectGame(YxFramwork.Common.Model.RoomUnitModel)">
            <summary>
            直接进游戏
            </summary>
            <param name="room"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.ShowRoomList(YxFramwork.Common.Model.GameUnitModel)">
            <summary>
            显示房间列表
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.ShowRoomList(System.String,System.Int32)">
            <summary>
            显示房间列表
            </summary>
            <param name="gameKey"></param>
            <param name="roomKind"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.ReOpenGame">
            <summary>
            重新连接游戏
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.OpenGame(YxFramwork.Common.Model.RoomUnitModel)">
            <summary>
            打开游戏
            </summary>
            <param name="room"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.GetCreateRoomParm(System.String,System.Action{System.Object})">
            <summary>
            获取创建房间信息
            </summary>
            <param name="gameKey"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.GetCreateRoomGroup(System.Action{System.Object})">
            <summary>
            获取创建房间组
            </summary>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.CreatRoom(System.Object)">
            <summary>
            创建房间
            </summary>
            <param name="parm">创建参数</param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.CreatGroupRoom(System.Object,System.Action{System.Object})">
            <summary>
            创建房间,给茶馆开房
            </summary>
            <param name="parm">创建参数</param>
            <param name="callback">房间创建成功的回调</param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.GetGroupRoomList(System.Collections.Generic.Dictionary{System.String,System.Object},System.Action{System.Object},System.Boolean)">
            <summary>
            获取茶馆的房间列表
            </summary>
            <param name="param"></param>
            <param name="callback"></param>
            <param name="hasWait"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.GetMyRoomList(System.Action{System.Object})">
            <summary>
            获取自己的房间列表
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.FindRoom(System.Int32,System.Action{System.Object})">
            <summary>
            查找房间
            </summary>
            <param name="roomId"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.FindRoomAndOpenWindow(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="roomType"></param>
            <param name="hasShow"></param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.JoinFindRoom(System.Int32,System.String)">
            <summary>
            加入查找到的房间
            </summary>
            <param name="roomId">房间id</param>
            <param name="gameKey">游戏key</param>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.QuickGame(System.String)">
            <summary>
            快速游戏
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.RoomListController.LaunchGame">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RoomListController.OpenGame(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            打开游戏
            </summary>
            <param name="roomId"></param>
            <param name="gameKey"></param>
            <param name="boot"></param>
        </member>
        <member name="T:YxFramwork.Controller.SfsLoginController">
            <summary>
            内部实现的交互，登陆/重连
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.SfsLoginController.UpdateText(System.String,System.Single)">
            <summary>
            刷新网络连接信息
            </summary>
            <returns></returns>
        </member>
        <member name="F:YxFramwork.Controller.SfsLoginController._enterType">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.SfsLoginController._curGameInfoType">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.SfsLoginController.SendRequestGameInfo">
            <summary>
            请求游戏信息
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.RemoteController">
            <summary>
            游戏交互的基础类。实现抽象方法即可
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.RemoteController.HotRejoin">
            <summary>
            是否允许热重连。比如游戏场景中直接重连。非常牛逼
            </summary>
        </member>
        <member name="P:YxFramwork.Controller.RemoteController.GameKey">
            <summary>
            游戏交互的GameKey。不要带"."
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.Awake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnAwake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnStart">
            <summary>
            如果要继承，请保留base.OnStart();
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.AddListener(System.String,System.Action{Sfs2X.Entities.Data.ISFSObject},System.String)">
            <summary>
            添加监听
            </summary>
            <param name="cmd">命令</param>
            <param name="responseCallBack"></param>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.DeleteListener(System.String,System.String)">
            <summary>
            删除监听
            </summary>
            <param name="cmd"></param>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.AddSfsEventListener(System.String,Sfs2X.Core.EventListenerDelegate)">
            <summary>
            添加sfs监听事件
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.RemoveSfsEventListener(System.String,Sfs2X.Core.EventListenerDelegate)">
            <summary>
            移除sfs监听事件
            </summary>
            <param name="eventType"></param>
            <param name="listener"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.Init(System.Collections.Generic.Dictionary{System.String,System.Action{Sfs2X.Entities.Data.ISFSObject}})">
             <summary>
             设置回调
             已监听事件
            
             RequestCmd.GameInfo   -----> OnGetGameInfo
             RequestCmd.ReJoinRoom -----> OnGetRejoinData
             RequestCmd.Request    -----> OnServerResponse
             RequestCmd.UserOutRoom-----> OnUserOutRoom
             </summary>
             <param name="callBackDic">收到服务器数据后根据Cmd调用对应的回掉方法</param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.InnerRejoin">
            <summary>
            断线重连，如果返回true,需要游戏返回到大厅
            </summary>
            <returns>如果返回true,需要回到大厅</returns>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendReJoinGame">
            <summary>
            发送重连
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnAllowEnter">
            <summary>
            服务器允许进入游戏
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.ChangeRoom">
            <summary>
            换房
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnChangeRoom">
            <summary>
            换房
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.HasLogin">
            <summary>
            是否已经登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendContinue">
            <summary>
            继续（服务器会自动判断是否继续还是换房间）
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.Reset">
             <summary>
            更换游戏的时候。重新监听服务器响应
             </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendTalk(System.String,System.String)">
            <summary>
            发送聊天内容
            </summary>
            <param name="text"></param>
            <param name="target"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnTalk(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            处理聊天数据
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.InitGame(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            初始化
            </summary>
            <param name="gameInfo"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendGameRequest(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            发送请求：游戏专用。使用GameKey.rqst作为Cmd
            </summary>
            <param name="data">rqst对应的Data；必须添加type数据.</param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendFrameRequest(System.String,Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            发送请求
            </summary>
            <param name="cmd"></param>
            <param name="data"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendRequest(Sfs2X.Requests.IRequest)">
            <summary>
            发送请求。全部通用
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.QuickGame(System.Int32)">
            <summary>
            发送快速开始游戏
            </summary>
            <param name="gameType"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.GameStart">
            <summary>
            开始进入游戏
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendLeaveRoom">
            <summary>
            离开房间
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.SendUserIdel(System.Boolean)">
            <summary>
            发送离线
            </summary>
            <param name="focus"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.Gc">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnMatchingRoom">
            <summary>
            匹配房间的时候会调用
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnInitUser(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            自己的数据
            </summary>
            <param name="userData">自己的数据</param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.UserState(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            玩家状态
            </summary>
            <param name="sfsObj"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.UserIdle(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            自定义玩家状态
            </summary>
            <param name="sfsObj"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnGetGameInfo(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            处理获取到游戏房间数据
            </summary>
            <param name="gameInfo"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnGetRejoinData(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            处理断线重连数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnServerResponse(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            处理游戏中数据；对应rqst
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnUserOut(System.Int32)">
            <summary>
            玩家退出
            </summary>
            <param name="seat">退出的玩家位置</param>
            <returns>是否显示弹窗</returns>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnUserIdle(System.Int32)">
            <summary>
            离线
            </summary>
            <param name="serverSeat"></param>
        </member>
        <member name="M:YxFramwork.Controller.RemoteController.OnUserOnLine(System.Int32)">
            <summary>
            离线
            </summary>
            <param name="serverSeat"></param>
        </member>
        <member name="T:YxFramwork.Controller.GameInfoType">
            <summary>
            加入游戏类型
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.InitRemote">
            <summary>
            初始化游戏server
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.InitGame">
            <summary>
            初始化游戏
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.InitSfs">
            <summary>
            初始化sfslogin
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.InitAll">
            <summary>
            {InitRemote InitGame InitSfs}的和
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.Join">
            <summary>
            正常加入游戏
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.ReJoin">
            <summary>
            重新加入游戏
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.JoinFindRoom">
            <summary>
            加入查找的房间
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.RequestGameInfo">
            <summary>
            获取GameInfo （Join ReJoin JoinFindRoom） 的和
            </summary>
        </member>
        <member name="F:YxFramwork.Controller.GameInfoType.Resetting">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.GameListController">
            <summary>
            游戏列表控制
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.GameListController.GetGameList">
            <summary>
            获取服务器游戏列表
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.GameListController.GetGameListNoVerify(YxFramwork.Manager.TwCallBack)">
            <summary>
            获取服务器游戏列表
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.GameListController.ShowGameList(System.Int32)">
            <summary>
            显示游戏列表
            </summary>
        </member>
        <member name="T:YxFramwork.Controller.UserController">
            <summary>
            职责： 负责发送请求，修改model，通知view层 model 修改了
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.UserController.Login(System.String,System.String,System.Boolean)">
            <summary>
            登陆
            </summary>
            <param name="userName"></param>
            <param name="pwd"></param>
            <param name="isRemberUserName"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.LoginWithShare(System.Collections.IDictionary)">
            <summary>
            登陆
            </summary>
            <param name="parm"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.AutoLogin">
            <summary>
            自动登陆
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.UserController.VisitorLogin">
            <summary>
            游客登录
            </summary> 
        </member>
        <member name="M:YxFramwork.Controller.UserController.WeChatLogin">
            <summary>
            微信登录
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.UserController.WeChatLogin(System.String,System.String)">
            <summary>
            微信登录
            </summary>
            <param name="code">微信code</param>
            <param name="refreshToken">微信token</param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.OnWeChatLoginSuccess(System.Object)">
            <summary>
            微信登录成功
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.OnPasswdLoginSuccess(System.Object)">
            <summary>
            登陆成功
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.TencentLogin">
            <summary>
            腾讯QQ登录
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.UserController.TencentLogin(System.Collections.IDictionary)">
            <summary>
            腾讯QQ登录
            </summary>
            <param name="parm">登录数据</param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.OnTencentLoginSuccess(System.Object)">
            <summary>
            QQ登录成功
            </summary>
            <param name="msg"></param>
        </member>
        <member name="F:YxFramwork.Controller.UserController.LaunchGame">
            <summary>
            启动游戏
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.UserController.GetUserDate(YxFramwork.Manager.TwCallBack)">
            <summary>
            获取玩家数据
            </summary>
            <param name="callBack">回调</param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.GetBackPack(YxFramwork.Manager.TwCallBack)">
            <summary>
            获取背包
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.UserController.GetUserDateWithBackPack(YxFramwork.Manager.TwCallBack,YxFramwork.Manager.TwCallBack)">
            <summary>
            
            </summary>
            <param name="userDataCallBack"></param>
            <param name="backPackCallBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.GetShareInfo(System.Action{YxFramwork.Tool.ShareInfo},YxFramwork.Tool.ShareType,YxFramwork.Tool.SharePlat,System.String,System.String)">
            <summary>
            获取分享数据
            </summary>
            <param name="callBack">回调方法参数ShareInfo</param>
            <param name="sType">分享类型</param>
            <param name="wSence">分享平台</param>
            <param name="localImage">本地图片 分享服务器返回图片不用填此项</param>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.GetShareInfo(System.Collections.Generic.Dictionary{System.String,System.Object},System.Action{YxFramwork.Tool.ShareInfo},YxFramwork.Tool.ShareType,YxFramwork.Tool.SharePlat,System.String,System.String)">
            <summary>
            获取分享数据
            </summary>
            <param name="parm">其他参数</param>
            <param name="callBack">回调方法参数ShareInfo</param>
            <param name="sType">分享类型</param>
            <param name="sence">分享平台</param>
            <param name="localImage">本地图片 分享服务器返回图片不用填此项</param>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.GetShareInfoAddShare(System.Action{YxFramwork.Tool.ShareInfo},YxFramwork.Tool.ShareType,YxFramwork.Tool.SharePlat,System.String,System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)">
            <summary>
            获取分享数据,并分享
            </summary>
            <param name="callBack">回调方法参数ShareInfo</param>
            <param name="sType">分享类型</param>
            <param name="sence">分享平台</param>
            <param name="localImage">本地图片 分享服务器返回图片不用填此项</param>
            <param name="success">分享成功</param>
            <param name="cancel">取消分享</param>
            <param name="failed">分享失败</param>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.ShareReward(YxFramwork.Tool.SharePlat,YxFramwork.Manager.TwCallBack)">
            <summary>
            分享成功向服务器索要奖励
            </summary>
            <param name="plat">分享平台</param>
            <param name="callBack">回调</param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.Buy(System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            购买物品
            </summary>
            <param name="p"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.SaveCoin(System.String,System.String,System.String,YxFramwork.Manager.TwCallBack,System.Int32)">
            <summary>
            保存金币
            </summary>
            <param name="opType">1:存，2:取</param>
            <param name="count">个数</param>
            <param name="pwd">密码</param>
            <param name="onFinish"></param>
            <param name="unit">单位：代表10的unit次幂</param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.PresentBankCoin(System.String,System.Int32,System.String,YxFramwork.Manager.TwCallBack,System.Int32)">
            <summary>
            赠送银行金币
            </summary>
            <param name="recipientId"></param>
            <param name="amount"></param>
            <param name="bnkPwd"></param>
            <param name="onFinish"></param>
            <param name="unit"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.ChangeBankPwd(System.String,System.String,YxFramwork.Manager.TwCallBack)">
            <summary>
            修改银行密码
            </summary>
            <param name="oldPwdStr">旧密码</param>
            <param name="newPwdStr">新密码</param>
            <param name="onFinish">回调</param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.Restier(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            注册
            </summary>
            <param name="userName">用户名</param>
            <param name="userPwd">密码</param>
            <param name="nikeName">昵称</param>
            <param name="prote">头像</param>
            <param name="sex">性别</param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.SendSimpleUserData(System.Action)">
            <summary>
            刷新数据
            </summary>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Controller.UserController.FreshUserData(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            刷新玩家数据
            </summary>
        </member>
        <member name="M:YxFramwork.Controller.UserController.FreshSimpleUserData(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:YxFramwork.Enums.EAppStyle">
            <summary>
            应用样式
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.EAppStyle.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.EAppStyle.Concise">
            <summary>
            简约
            </summary>
        </member>
        <member name="T:YxFramwork.Enums.LoginStyle">
            <summary>
            登录样式
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.LoginStyle.Normal">
            <summary>
            账号登录
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.LoginStyle.WeChatLogin">
            <summary>
            微信登录
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.LoginStyle.QqLogin">
            <summary>
            qq登录
            </summary>
        </member>
        <member name="T:YxFramwork.Enums.HistoryPathType">
            <summary>
            历史索引
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.HistoryPathType.None">
            <summary>
            无状态
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.HistoryPathType.Login">
            <summary>
            登录
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.HistoryPathType.Register">
            <summary>
            注册
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.HistoryPathType.Hall">
            <summary>
            大厅
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.HistoryPathType.GameList">
            <summary>
            游戏列表
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.HistoryPathType.RoomList">
            <summary>
            房间列表
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.HistoryPathType.Game">
            <summary>
            游戏
            </summary>
        </member>
        <member name="T:YxFramwork.Enums.ThirdPlatform">
            <summary>
            第三方平台
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.ThirdPlatform.WeChat">
            <summary>
            微信
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.ThirdPlatform.Alipay">
            <summary>
            支付宝
            </summary>
        </member>
        <member name="T:YxFramwork.Enums.PayPlatForm">
            <summary>
            支付平台
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.PayPlatForm.Wx">
            <summary>
            微信支付
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.PayPlatForm.Zfb">
            <summary>
            支付宝支付
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.PayPlatForm.Iap">
            <summary>
            苹果应用内支付
            </summary>
        </member>
        <member name="T:YxFramwork.Enums.YxSysEventType">
            <summary>
            消息类型，系统使用
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxSysEventType.SysGpsInfo">
            <summary>
            Gps消息
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxSysEventType.SysVoice">
            <summary>
            语音
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxSysEventType.SysChat">
            <summary>
            聊天
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxSysEventType.SysUserInfo">
            <summary>
            玩家信息
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxSysEventType.SysBackPack">
            <summary>
            背包
            </summary>
        </member>
        <member name="T:YxFramwork.Enums.YxUIType">
            <summary>
            ui类型
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxUIType.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxUIType.Nguid">
            <summary>
            ngui环境
            </summary>
        </member>
        <member name="F:YxFramwork.Enums.YxUIType.Ugui">
            <summary>
            uigui环境
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.Core.BaseOnOff">
            <summary>
            基本开关，用于位开关控制
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOff.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOff.OnStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOff.OnDestroy">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOff.GetId">
            <summary>
            获取id
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOff.GetBaseType">
            <summary>
            获取类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOff.SetState(System.Boolean)">
            <summary>
            设置状态
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOff.Fresh(System.Int32,System.String)">
            <summary>
            刷新
            </summary>
            <param name="state"></param>
            <param name="type"></param>
        </member>
        <member name="T:YxFramwork.Framework.Core.BaseOnOffData">
            <summary>
            数据
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.Core.BaseOnOffData.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.Core.BaseOnOffData.OnOffDict">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseOnOffData.Fresh(System.Int32)">
            <summary>
            刷新
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:YxFramwork.Framework.Core.ICloseAble">
            <summary>
            可关闭的组件
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.ICloseAble.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.Core.Base">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.Core.BaseMono">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseMono.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseMono.AddListien(System.String,YxFramwork.Common.YxMsgAcion)">
            <summary>
            添加监听
            </summary>
            <param name="msg"></param>
            <param name="msgAction"></param>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseMono.RemoveAllListien">
            <summary>
            移除所有监听
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseMono.ReBindListien">
            <summary>
            重新绑定监听
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.BaseMono.OnDestroy">
            <summary>
            销毁
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.Core.Facade">
            <summary>
            事件命令
            </summary> 
        </member>
        <member name="P:YxFramwork.Framework.Core.Facade.GetInstance">
            <summary>
            获取单例对象
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.Facade.Instance``1">
            <summary>
            获取管理对象
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.Facade.Init">
            <summary>
            初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.Core.Facade.RemoveManager``1">
            <summary>
            删除指定管理对象
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Core.Facade.Reset">
            <summary>
            清空管理类
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.YxBaseRendererAdapter">
            <summary>
            渲染器适配器
            </summary>
        </member>
        <member name="P:YxFramwork.Framework.YxBaseRendererAdapter.BaseRenderer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseRendererAdapter.OnSortingOrder(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:YxFramwork.Framework.YxBaseLabelAdapter">
            <summary>
            设置labe接口
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.LabelType">
            <summary>
            文本类型
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.Mfont">
            <summary>
            字体
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.MinDistance">
            <summary>
            与屏幕的最小间距
            </summary>
        </member>
        <member name="P:YxFramwork.Framework.YxBaseLabelAdapter.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.ContentFormat">
            <summary>
            内容格式；
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseLabelAdapter.Text(System.String)">
            <summary>
            内容
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseLabelAdapter.OnText(System.String)">
            <summary>
            设置文本
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseLabelAdapter.Text(System.Int64)">
            <summary>
            设置数字
            </summary>
            <param name="num"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseLabelAdapter.Font(UnityEngine.Font)">
            <summary>
            设置字体
            </summary>
            <param name="font"></param>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.MaxMin">
            <summary>
            x:最小宽度  y:最大宽度   z:最小高度    w：最大高度
            </summary>
        </member>
        <member name="P:YxFramwork.Framework.YxBaseLabelAdapter.Width">
            <summary>
            宽度
            </summary>
            <returns></returns>
        </member>
        <member name="P:YxFramwork.Framework.YxBaseLabelAdapter.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:YxFramwork.Framework.YxBaseLabelAdapter.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseLabelAdapter.GetTextWidth(System.String)">
            <summary>
            获取指定文本的宽度
            </summary>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Framework.YxBaseLabelAdapter.YxELabelType">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.YxELabelType.Normal">
            <summary>
            正常的
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.YxELabelType.Password">
            <summary>
            密码类型
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.YxELabelType.Number">
            <summary>
            数字类型
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.YxELabelType.NumberWithUnit">
            <summary>
            数字带单位
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.YxELabelType.ReduceNumber">
            <summary>
            压缩数字
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseLabelAdapter.YxELabelType.ReduceNumberWithUnit">
            <summary>
            压缩数字带单位
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.YxBasePanelAdapter">
            <summary>
            面板适配器
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBasePanelAdapter.Order">
            <summary>
            
            </summary>
        </member>
        <member name="P:YxFramwork.Framework.YxBasePanelAdapter.LayerOrder">
            <summary>
            层级（优于Order）
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBasePanelAdapter.SortingOrder(System.Int32)">
            <summary>
            内容
            </summary>
            <param name="order"></param>
        </member>
        <member name="T:YxFramwork.Framework.YxView">
            <summary>
            视图基类
            </summary> 
        </member>
        <member name="F:YxFramwork.Framework.YxView.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxView.Order">
            <summary>
            层次
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxView.InitStateTotal">
            <summary>
            总共初始化个数
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxView._curInitState">
            <summary>
            当前初始化状态
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxView.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:YxFramwork.Framework.YxView.GetSoleId">
            <summary>
            唯一类别
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxView.UpdateView(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxView.UpdateViewWithCallBack(System.Object,System.Action{System.Object})">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxView.CheckData(System.Boolean)">
            <summary>
            检查是否为新数据
            </summary>
            <param name="equals"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxView.Show">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxView.OnShow">
            <summary>
            显示事件
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxView.Hide">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxView.OnHide">
            <summary>
            隐藏事件
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxView.IsShow">
            <summary>
            窗口显示状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxView.SetOrder(System.Int32)">
            <summary>
            设置层次
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxView.GetOrder">
            <summary>
            获得层次
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxView.OpenOtherWindow(System.String)">
            <summary>
            打开其他窗口
            </summary>
            <param name="winName"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxView.CreateOtherWindow(System.String)">
            <summary>
            打开其他窗口
            </summary>
            <param name="winName"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxView.CreateOhterWindowWithT``1(System.String)">
            <summary>
            
            </summary>
            <param name="winName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxView.GetData``1">
            <summary>
            获取数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxView.GetData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxView.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.YxWindow">
            <summary>
            窗口基类
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxWindow.OpenChildWindow(System.String)">
            <summary>
            打开子窗口
            </summary>
            <param name="windowName"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxWindow.CreateChildWindow(System.String,System.String,System.String)">
            <summary>
            打开子窗口
            </summary>
            <param name="windowName"></param>
            <param name="bundleName"></param>
            <param name="context"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxWindow.OpenWindow(YxFramwork.Framework.YxWindow)">
            <summary>
            打开窗口
            </summary>
            <param name="window">窗口</param>
        </member>
        <member name="M:YxFramwork.Framework.YxWindow.UpOrder">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.Singleton`1">
            <summary>
            单例基类
            </summary>
            <typeparam name="T">单例类型</typeparam>
        </member>
        <member name="P:YxFramwork.Framework.Singleton`1.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.Singleton`1.Gc">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.UnitySingleton`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:YxFramwork.Framework.UnitySingleton`1.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.UnitySingleton`1.Awake">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.TweenManger.queue">
            <summary>
            播放队列
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.TweenManger.IsPlay">
            <summary>
            判断是否正在播放
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.TweenManger.IsFinishCount">
            <summary>
            已经下载的数量
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.TweenManger.OnFinish">
            <summary>
            当动画播放完成调用的方法
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.TweenManger.TotalCount">
             <summary>
            数量
             </summary>
        </member>
        <member name="T:YxFramwork.Framework.WindowName">
            <summary>
             面板框架
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.YxBaseController`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseMode`1.Save">
            <summary>
            发送一个消息，通知view 更新了
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseMode`1.Convert(System.Object)">
            <summary>
            转换数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:YxFramwork.Framework.YxBaseMode`1.TmpId">
            <summary>
            每次修改时该值加1，view show 的时候会判断该值
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.YxBaseMoreWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseMoreWindow.yxBaseWindows">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.MoreModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.MoreModel.IsFirstShow">
            <summary>
            是否为第一显示
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.MoreModel.yxBaseWindow">
            <summary>
            子窗口
            </summary>
        </member>
        <member name="T:YxFramwork.Framework.YxBaseWindow">
            <summary>
            存在理由，将业务逻辑与Ui层分离开，当换肤时，不用重新写业务逻辑
            
            职责：将model绑定给控件，通过OnBindDate，每次model修改时重新将数据绑定到window上
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseWindow.IsChildWindow">
            <summary>
            是否为子窗口
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseWindow.Bundle">
            <summary>
            资源包名
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseWindow.IsAlwaysShow">
            <summary>
            是否一直显示
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseWindow.IsHiddenAll">
            <summary>
            是否隐藏所有
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseWindow.DestroyOnHiden">
            <summary>
            销毁隐藏
            </summary>
        </member>
        <member name="F:YxFramwork.Framework.YxBaseWindow.IsShow">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:YxFramwork.Framework.YxBaseWindow.WindowName">
            <summary>
            获取窗口类型
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.Create(System.String)">
            <summary>
            创建窗口
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.OnCreate">
             <summary>
            当窗口调用是调用
            
             写获取组件，绑定按钮点击事件，监听事件等方法
             </summary>
             <param resName="o"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.Show(System.Object)">
            <summary>
            当窗口展示时调用的事件
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.Hidden">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.OnBindDate(System.Boolean)">
            <summary>
            当监听的model 更改时调用的方法
            完成对组建赋值等操作
            </summary>
            <param name="isChange">数据是否发生改变,_OnChange的时候为true,否则为false</param>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.OnWindowDestory">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.LoadResourse(System.String)">
            <summary>
            
            </summary>
            <param name="resName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.FindChild``1(System.String)">
            <summary>
            查找Child的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.FindChild(System.String)">
            <summary>
            查找GameObject
            </summary>
            <param name="objName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.OnOpenWindow(System.String)">
            <summary>
            打开窗口
            </summary>
            <param name="winName"></param>
        </member>
        <member name="M:YxFramwork.Framework.YxBaseWindow.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CacheManager.SigntoCache(System.String,System.String)">
            <summary>
            标记
            </summary>
            <param name="catchName"></param>
            <param name="signMsg"></param>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Manager.CurtainManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.CurtainManager.CurCurtainView">
            <summary>
            
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.CurtainManager.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.CurtainManager.DefStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.ChangeState(YxFramwork.View.CurtainView.CurtainState)">
            <summary>
            切换状态
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.FreshCamera">
            <summary>
            刷新摄像机
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.ShowCurtain(System.String,System.String,System.String)">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.ShowCurtain(YxFramwork.View.CurtainView)">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.ShowCurtainView(System.String,System.String,System.String,YxFramwork.View.CurtainView)">
            <summary>
            
            </summary>
            <param name="assetName"></param>
            <param name="context"></param>
            <param name="bundleName"></param>
            <param name="defaultView">默认样式</param>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.CloseCurtain">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.Gc">
            <summary>
            清理
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.SetCurtainInfo(System.String)">
            <summary>
            设置进度信息，如果进度条正在走动，不会出现消息
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.CurtainManager.SetCurtainInfo(System.Single,System.String)">
            <summary>
            设置进度条
            </summary>
            <param name="progress"></param>
            <param name="message"></param>
        </member>
        <member name="M:YxFramwork.Manager.NetStateManager.CheckNet">
            <summary>
            检查网络
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.NetStateManager.CheckNetType(System.Action)">
            <summary>
            检查网路类型
            </summary>
            <param name="noWifiCallBack"></param>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Manager.ShareManager">
            <summary>
            分享管理器
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.ShareManager.LaunchFromShareInfo">
            <summary>
            从分享获取参数
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.ShareManager.AnalyzeScheme(System.String)">
            <summary>
            
            </summary>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ShareManager.AutoLogin(System.Collections.IDictionary)">
            <summary>
            自动登录
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.ShareManager.ShareRoomInfoAndInvite(System.String,System.String,System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            分享房间信息，并邀请
            </summary>
            <param name="roomId"></param>
            <param name="title"></param>
            <param name="success"></param>
            <param name="cancel"></param>
            <param name="failed"></param>
        </member>
        <member name="T:YxFramwork.Manager.TWMessageManager">
            <summary>
            php消息处理
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.TWMessageManager.NeedRollNotice">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.TWMessageManager.RollNoticeKey">
            <summary>
            消息Action名称
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.TWMessageManager.LastId">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.StartRollNotice">
            <summary>
            发送
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.StopRollNotice">
            <summary>
            停止广播
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.FixedUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.SendRollNotice">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.OnUpdateRollNotice(System.Object)">
            <summary>
            广播入口 todo 里面的内容换到别的地方处理
            </summary>
            <param name="msg"></param>
        </member>
        <member name="F:YxFramwork.Manager.TWMessageManager._events">
            <summary>
            事件
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.OnEventMessage(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            事件消息
            </summary>
            <param name="dict"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.FriendInviteJoinRoom(YxFramwork.Manager.TwMessageEventData)">
            <summary>
            好友邀请房间
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.AddEvent(System.Int32,System.Action{YxFramwork.Manager.TwMessageEventData})">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.RemoveEvent(System.Int32)">
            <summary>
            /
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.SetNoticeLastId(System.String)">
            <summary>
            上一次的消息id
            </summary>
            <param name="lastId"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.SetNoticeAppointTime(System.String)">
            <summary>
            指定时间
            </summary>
            <param name="appointTime"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.SetNoticeLoopTime(System.String)">
            <summary>
            循环监听时间
            </summary>
            <param name="loopTime"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.OnTemporaryMessage(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            临时广播
            </summary>
            <param name="dict"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.OnRollMessage(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            处理循环广播
            </summary>
            <param name="dict"></param>
        </member>
        <member name="M:YxFramwork.Manager.TWMessageManager.GetNoticeMsgData(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            获取广播信息
            </summary>
            <param name="msgDict"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Manager.TwMessageEventData">
            <summary>
            事件数据
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.TwMessageEventData.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.TwMessageEventData.Message">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.TwMessageEventData.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TwMessageEventData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TwMessageEventData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="dict"></param>
        </member>
        <member name="T:YxFramwork.Manager.YxGameManager">
            <inheritdoc />
            <summary>
            游戏中系统窗口辅助类
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.YxGameManager.OnQuitGameClick">
            <summary>
            简单退出游戏返回大厅事件
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.YxGameManager.InitGame(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isRejoin">是否重连</param>
        </member>
        <member name="M:YxFramwork.Manager.YxGameManager.GameStatus(System.Int32,Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            游戏状态
            </summary>
            <param name="type"></param>
            <param name="gameInfo"></param>
        </member>
        <member name="T:YxFramwork.Manager.MusicManager">
            <inheritdoc />
            <summary>
            声音管理总类
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.MusicManager.DefaultSourceName">
            <summary>
            默认声音资源名字
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.MusicManager.Instance">
            <summary>
            获取声音单例
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.Init">
            <inheritdoc />
            <summary>
            初始化系统，加载音量配置
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.MusicManager.MusicVolume">
            <summary>
            调节/获取背景音乐音量
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.MusicManager.EffectVolume">
            <summary>
            调节/获取音效音量
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.MusicManager.PlayerVolume">
            <summary>
            调节/获取音效音量
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.Stop">
            <summary>
            停止播放
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.ChangeSource(System.String)">
            <summary>
            切换声音源
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.GetAudioClip(System.String,System.String)">
            <summary>
            获取一个声音
            </summary>
            <param name="key">声音名称</param>
            <param name="source">声音源文件夹名</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.CanPlayBackSound">
            <summary>
            是否播放背景音乐，默认是1：播放
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.CanPlaySoundEffect">
            <summary>
            是否播放音效,默认是1：播放
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.InitBackSound">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.PlayBacksound">
            <summary>
            播放背景音乐
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.ChangeBackSound(System.Int32)">
            <summary>
            切换背景音乐
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.Play(UnityEngine.AudioClip,UnityEngine.Vector3)">
            <summary>
            播放音频剪辑
            </summary>
            <param name="clip"></param>
            <param name="position"></param>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.Play(System.String,System.String)">
            <summary>
            播放声音
            </summary>
            <param name="audioName"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.Play(System.String,UnityEngine.Vector3,System.String)">
            <summary>
            播放声音
            </summary>
            <param name="audioName"></param>
            /// <param name="position"></param>
            <param name="source"></param>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.PlayFromSource(System.String,System.Object)">
            <summary>
            从设置好好的source中播放声音
            </summary>
            <param name="audioName"></param>
            <param name="sourceEx">扩展，将会与changeSource的字符串拼接</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.PlayFromSource(System.String,UnityEngine.Vector3,System.Object)">
            <summary>
            从设置好好的source中播放声音
            </summary>
            <param name="audioName"></param>
            <param name="position"></param>
            <param name="sourceEx"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.OnDestory">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.Clear">
            <summary>
            卸载所有资源；停止播放。
            在不同游戏上切换会自动触发，卸载前一个游戏的资源
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.SetMusicEnable(System.Boolean)">
            <summary>
            设置背景可用
            </summary>
            <param name="curEnable"></param>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.SetSoundEnable(System.Boolean)">
            <summary>
            设置音效可用
            </summary>
            <param name="curEnable"></param>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.SetMusicPause(System.Boolean)">
            <summary>
            设置背景暂停
            </summary>
            <param name="isPause"></param>
        </member>
        <member name="M:YxFramwork.Manager.MusicManager.SetSoundPause(System.Boolean)">
            <summary>
            设置音效暂停
            </summary>
            <param name="isPause"></param>
        </member>
        <member name="T:YxFramwork.Manager.PanelManager">
            <summary>
            面板管理器
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.PanelManager._toShowNames">
            <summary>
            所有即将显示的窗口
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.PanelManager.HiddenNames">
            <summary>
            所有隐藏的窗口
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.PanelManager.Scale">
            <summary>
            缩放
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.PanelManager._createdWindow">
            <summary>
            已经创建的窗体
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.PanelManager._showingWindow">
            <summary>
            正在显示的窗体
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.AddHiddingWindow(YxFramwork.Framework.WindowName)">
            <summary>
            添加隐藏的窗口
            </summary>
            <param name="windowName">窗口名称</param>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.RemoveHiddingWindow(YxFramwork.Framework.WindowName)">
            <summary>
            移除隐藏窗口
            </summary>
            <param name="windowName">窗口名称</param>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.Undo">
            <summary>
            回退
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.ShowWindow(YxFramwork.Framework.WindowName,System.Object)">
            <summary>
            /显示窗口
            </summary>
            <param name="wName">窗口名称</param>
            <param name="pram">参数</param>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.OnHiddenFinish">
            <summary>
            隐藏完成事件
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.CreatePanel(YxFramwork.Framework.WindowName)">
            <summary>
            创建面板
            </summary>
            <param name="wName">窗口名称</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.ShowWindow(YxFramwork.Framework.WindowName)">
            <summary>
            显示窗口
            </summary>
            <param name="wName"></param>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.HiddenWindow(YxFramwork.Framework.WindowName)">
            <summary>
            隐藏窗口
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.HiddenAll">
            <summary>
            隐藏所有窗体
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.ClearAll">
            <summary>
            删除所有窗口
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.GetExistWindow(YxFramwork.Framework.WindowName)">
            <summary>
            获取已经存在的窗口
            </summary>
            <param name="wName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.AddIsCreateWindow(YxFramwork.Framework.YxBaseWindow)">
            <summary>
            
            </summary>
            <param name="baseWindow"></param>
        </member>
        <member name="M:YxFramwork.Manager.PanelManager.DestoryWindow(YxFramwork.Framework.WindowName)">
            <summary>
            删除窗口
            </summary>
            <param name="p"></param>
        </member>
        <member name="T:YxFramwork.Manager.ResourceManager">
            <summary>
            资源管理器
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.ResourceManager.Res">
            <summary>
            默认资源
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.ResourceManager._refTimes">
            <summary>
            加载的次数
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.StartToLoad(System.String,UnityEngine.AssetBundleManifest)">
            <summary>
            开始加载
            </summary>
            <param name="gameKey"></param>
            <param name="mainifest"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.SetDebug">
            <summary>
            设置debug
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ContainsRes(System.String)">
            <summary>
            是否有指定gamekey的ResourceInfo
            </summary>
            <param name="gameKey"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.HasRes(System.String,System.String)">
            <summary>
            是否有指定资源
            </summary>
            <param name="gameKey">游戏名</param>
            <param name="bundleName">bundle名</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.GetResMgr(System.String)">
            <summary>
            获取ResMgr
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ShowInfo(System.String)">
            <summary>
            显示信息
            </summary>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.FindAsset(System.String@,System.String@,System.String@)">
            <summary>
            是否有资源
            </summary>
            <param name="gameName"></param>
            <param name="bundleName"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.FindAssetAsync(YxFramwork.Manager.AssetBundleInfo,System.Boolean)">
            <summary>
            是否有资源
            </summary> 
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadAsset(System.String,System.String,System.String)">
            <summary>
            加载资源
            </summary>
            <param name="gameKey">游戏名称</param>
            <param name="bundleName">资源包名</param>
            <param name="name">资源名</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadAsset``1(System.String,System.String,System.String)">
            <summary>
            加载资源
            </summary>
            <param name="gameKey">游戏名称</param>
            <param name="bundleName">资源包名</param>
            <param name="name">资源名</param>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadAssetListAsync(System.Collections.Generic.List{YxFramwork.Manager.AssetBundleInfo},System.Action{System.Collections.Generic.List{YxFramwork.Manager.AssetBundleInfo}})">
            <summary>
            异步加载资源组
            </summary>
            <param name="assetBundleInfos"></param>
            <param name="??"></param>
            <param name="onLoadFinished"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadingAssetListAsync(System.Collections.Generic.List{YxFramwork.Manager.AssetBundleInfo},System.Action{System.Collections.Generic.List{YxFramwork.Manager.AssetBundleInfo}})">
            <summary>
            
            </summary>
            <param name="assetBundleInfos"></param>
            <param name="onLoadFinished"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadAssesAsync(YxFramwork.Manager.AssetBundleInfo)">
            <summary>
            异步加载资源组
            </summary>
            <param name="abInfo"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadingAssetAsync(YxFramwork.Manager.AssetBundleInfo,System.Boolean)">
            <summary>
            异步加载资源
            </summary> 
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.GetBundle(System.String,System.String)">
            <summary>
            获取已存在的bundle
            </summary>
            <param name="gameKey"></param>
            <param name="bundleName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.GetBundleAsync(YxFramwork.Manager.AssetBundleInfo)">
            <summary>
            获取已存在的bundle
            </summary> 
            <param name="abinfo"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadAsset(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="bundle"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadAllAssetBundle(System.String)">
            <summary>
            加载所有bundle
            </summary>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.AddBundleInfo(System.String,System.Int32)">
            <summary>
            增加bundleInfo
            </summary>
            <param name="bundleName">bundle名称</param>
            <param name="add">增加个数，如果为0，表示清空</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.HasLoadedInfo(System.String)">
            <summary>
            是否已加载
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadScene(System.String)">
            <summary>
            加载场景
            </summary>
            <param name="gameKey"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadScene(System.String,System.String)">
            <summary>
            加载场景
            </summary>
            <param name="gameKey"></param>
            <param name="sceneName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.LoadLocalRes(System.String)">
            <summary>
            加载本地资源
            </summary>
            <param name="gameKey"></param> 
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.Unload(System.String,System.String,System.String)">
            <summary>
            卸载
            </summary>
            <param name="gameName">游戏名</param>
            <param name="bundleName">资源名</param>
            <param name="extension"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.Unload(System.String)">
            <summary>
            卸载
            </summary>
            <param name="gameKey"></param>
        </member>
        <member name="T:YxFramwork.Manager.ResourceManager.ResourceInfo">
            <summary>
            资源信息
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.ResourceManager.ResourceInfo.Loaded">
            <summary>
            当前的
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.ResourceManager.ResourceInfo._attach">
            <summary>
            归属
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.ResourceManager.ResourceInfo._depenceData">
            <summary>
            依赖
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="gameKey"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo.SetManifest(UnityEngine.AssetBundleManifest)">
            <summary>
            设置
            </summary>
            <param name="mainifest"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo._Unload(System.String,System.Boolean)">
            <summary>
            卸载
            </summary>
            <param name="bundleName">bundleName</param>
            <param name="isClear"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo.LoadBundle(System.String,System.String)">
            <summary>
            bundleName
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo.AddLoaded(System.String,UnityEngine.AssetBundle)">
            <summary>
            增加记录
            </summary>
            <param name="key"></param>
            <param name="bundle"></param>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo.HasLoaded(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo.GetAsset``1(UnityEngine.AssetBundle,System.String)">
            <summary>
            获取资源
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bundle"></param>
            <param name="assetName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.ResourceManager.ResourceInfo._Unload">
            <summary>
            清理用
            </summary>
        </member>
        <member name="T:YxFramwork.Manager.AssetBundleInfo">
            <summary>
            bundle信息
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.AssetBundleInfo.Name">
            <summary>
            bundle名称
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.AssetBundleInfo.AssetName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.AssetBundleInfo.Bundle">
            <summary>
            bundle实例
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.AssetBundleInfo.Asset">
            <summary>
            资源
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.AssetBundleInfo.Times">
            <summary>
            次数
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.AssetBundleInfo.Attach">
            <summary>
            归属
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.AssetBundleInfo.Copy(YxFramwork.Manager.AssetBundleInfo)">
            <summary>
            拷贝
            </summary>
            <param name="other"></param>
        </member>
        <member name="T:YxFramwork.Manager.TwCallBack">
            <summary>
            回调
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:YxFramwork.Manager.TwManger">
            <summary>
            Http交互管理
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.TwManger.GeteWay(System.String,YxFramwork.Manager.TwCallBack,System.Boolean,YxFramwork.Manager.TwCallBack,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="callBack"></param>
            <param name="hasMsgBox"></param>
            <param name="errMsgEvent"></param>
            <param name="action"></param>
            <param name="hasWait"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:YxFramwork.Manager.TwManger.GeteWay(System.Collections.IDictionary,YxFramwork.Manager.TwCallBack,System.Boolean,YxFramwork.Manager.TwCallBack,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="pram"></param>
            <param name="callBack"></param>
            <param name="hasMsgBox"></param>
            <param name="errMsgEvent"></param>
            <param name="hasWait"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:YxFramwork.Manager.TwManger.SendMsg(System.String,System.Collections.IDictionary,YxFramwork.Manager.TwCallBack,System.Boolean,YxFramwork.Manager.TwCallBack)">
            <summary>
            发送消息
            </summary>
            <param name="url">url</param>
            <param name="param">参数</param>
            <param name="callBack">回调方法</param>
            <param name="hasMsgBox"></param>
            <param name="errMsgEvent"></param>
        </member>
        <member name="M:YxFramwork.Manager.TwManger.ShowInfoMsg(System.Object)">
            <summary>
            如果有message字段，会自动弹出内容
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:YxFramwork.Manager.TwManger.SendAction(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},YxFramwork.Manager.TwCallBack,System.Boolean,YxFramwork.Manager.TwCallBack,System.Boolean,System.String)">
            <summary>
            发送活动
            </summary>
            <param name="mainCode">指令</param>
            <param name="parm">参数</param>
            <param name="callBack">回调</param>
            <param name="hasMsgBox"></param>
            <param name="errMsgEvent"></param>
            <param name="hasWait"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:YxFramwork.Manager.TwManger.SendActions(System.String[],System.Collections.Generic.Dictionary{System.String,System.Object},YxFramwork.Manager.TwCallBack,System.Boolean,YxFramwork.Manager.TwCallBack,System.Boolean,System.String)">
            <summary>
            发送活动
            </summary>
            <param name="mainCodes">指令</param>
            <param name="parm">参数</param>
            <param name="callBack">回调</param>
            <param name="hasMsgBox"></param>
            <param name="errMsgEvent"></param>
            <param name="hasWait"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:YxFramwork.Manager.TwManger.PraseObj(System.String)">
            <summary>
            参数
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Manager.RequestParameter">
            <summary>
            交互参数
            </summary>
        </member>
        <member name="T:YxFramwork.Manager.YxWindowManager">
            <summary>
            窗口管理系统
            管理继承YxWindow的窗口
            </summary>
        </member>
        <member name="T:YxFramwork.Manager.YxWindowManager.YxWinLayer">
            <summary>
            窗口的层次
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.YxWindowManager.YxWinLayer.WindowLayer">
            <summary>
            普通窗口层
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.YxWindowManager.YxWinLayer.ChildWindowLayer">
            <summary>
            子窗口
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.YxWindowManager.YxWinLayer.LoadingLayer">
            <summary>
            幕布层
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.YxWindowManager.YxWinLayer.WaitForLayer">
            <summary>
            等待层
            </summary>
        </member>
        <member name="F:YxFramwork.Manager.YxWindowManager.YxWinLayer.MessageBoxLayer">
            <summary>
            弹框层
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.YxWindowManager.CurWindow">
            <summary>
            当前显示的窗口
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.YxWindowManager.CurMessageBox">
            <summary>
            当前Messagebox
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.YxWindowManager.Parent">
            <summary>
            窗口容器
            </summary>
        </member>
        <member name="P:YxFramwork.Manager.YxWindowManager.Instance">
            <summary>
            单例
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.Fresh">
            <summary>
            刷新
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.OpenWindow(System.String,System.Boolean,System.String,System.String)">
            <summary>
            打开窗口
            </summary>
            <param name="windowName">窗口名称</param>
            <param name="isTopShow">是否为</param>
            <param name="bundleName">资源包名</param>
            <param name="context"></param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.CreatWinow(System.String,System.String,System.String)">
            <summary>
            创建窗口
            </summary>
            <returns></returns>
            <param name="windowName">窗口名称</param>
            <param name="bundleName">资源包名</param>
            <param name="context">游戏名称,加载资源包相关,默认为null,将会从大厅资源里寻找</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.CreatWindow(UnityEngine.GameObject)">
            <summary>
            创建窗口
            </summary>
            <param name="win">预制</param>
            <returns>窗口实例</returns>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.AddWindow(System.String,System.String,System.String)">
            <summary>
            添加窗口
            </summary>
            <param name="windowName">窗口名称</param>
            <param name="bundleName">所在资源包</param>
            <param name="context">游戏名称,加载资源包相关,默认为null,将会从大厅资源里寻找</param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.AddWindow(YxFramwork.Framework.YxWindow,System.Collections.IList)">
            <summary>
            添加窗口
            </summary>
            <param name="window"></param>
            <param name="winList"></param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.InsertWindow(YxFramwork.Framework.YxWindow,System.Int32)">
            <summary>
            插入窗口
            </summary>
            <param name="window">窗口</param>
            <param name="index">索引(越靠前越早显示)</param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.TrimWindow(UnityEngine.Transform,UnityEngine.Transform)">
            <summary>
            添加窗口到父类
            </summary>
            <param name="window"></param>
            <param name="pt"></param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.CloseAllWindows">
            <summary>
            关闭所有窗口
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.OpenWindow(YxFramwork.Framework.YxWindow,System.Boolean)">
            <summary>
            打开窗口
            </summary>
            <param name="window">窗口</param>
            <param name="isTopShow">是否优先显示</param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.ShowCurWindow(YxFramwork.Framework.YxView,YxFramwork.Manager.YxWindowManager.YxWinLayer)">
            <summary>
            显示当前的窗口
            </summary>
            <param name="window"></param>
            <param name="winlayer"></param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.ShowMessageBox(YxFramwork.View.YxMessageBox,System.Boolean)">
            <summary>
            显示弹框
            </summary>
            <param name="msgBox">弹框</param>
            <param name="isTopShow">是否优先显示</param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.ShowWaitFor(System.String,System.String,System.String)">
            <summary>
            等待
            </summary>
            <param name="winName"></param>
            <param name="bundleName"></param>
            <param name="context"></param>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.HideWaitFor">
            <summary>
            隐藏等待
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.YxWindowManager.Gc">
            <summary>
            销毁
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.SmartManager.Clear">
            <summary>
            清理所有listener
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.SmartManager.SendRequest(Sfs2X.Requests.IRequest)">
            <summary>
            登录,注册，找回密码。。等所有不确定是否已经连接或登录服务器的数据都可以在这里发送
            </summary>
            <param name="request">发送的数据</param>
        </member>
        <member name="M:YxFramwork.Manager.SmartManager.SendUserIdel(System.Boolean,System.Boolean)">
            <summary>
            发送离线
            </summary>
            <param name="focus"></param>
            <param name="pingpong">是否是测试乒乓</param>
        </member>
        <member name="M:YxFramwork.Manager.SmartManager.SendUserIdel(System.Boolean)">
            <summary>
            发送离线
            </summary>
            <param name="focus"></param>
        </member>
        <member name="F:YxFramwork.Manager.SmartManager._lostTime">
            <summary>
            失去焦点
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.SmartManager.SendReJoinGame">
            <summary>
            发送重连
            </summary>
        </member>
        <member name="M:YxFramwork.Manager.SmartManager.OnSystemMessage(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            消息
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:YxFramwork.Tool.AlipayApi">
            <summary>
            支付宝相关api
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.AlipayApi._paySuccess">
            <summary>
            支付成功回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.AlipayApi._payFailed">
            <summary>
            支付失败回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.AlipayApi._payCancel">
            <summary>
            支付取消回调
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AlipayApi.Payment(System.String,System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            调用支付宝支付
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AlipayApi.ReceiveInfo(System.String)">
            <summary>
            支付宝总接收回调方法
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:YxFramwork.Tool.AndroidHelper">
            <summary>
            安卓助手
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AndroidHelper.InstallerApk(System.String)">
            <summary>
            安装Apk
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.AndroidHelper.Paste">
            <summary>
            粘贴
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.AndroidHelper.Copy(System.String)">
            <summary>
            复制
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:YxFramwork.Tool.AndroidPostman">
            <summary>
            与Android通信类
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.AndroidPostman.PostmanPacket">
            <summary>
            用于通讯的Android包名
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.AndroidPostman.PostmanObject">
            <summary>
            用于通讯的Android对象名
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AndroidPostman.CallAndroidFunction(System.String,System.Boolean,System.Object[])">
            <summary>
            调用无返回值有参数的Android方法 isStatic 为是否调用静态方法 主Activity下
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AndroidPostman.CallAndroidFunction(System.String,System.String,System.String,System.Boolean,System.Object[])">
            <summary>
            调用无返回值有参数的Android方法 isStatic 为是否调用静态方法 
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AndroidPostman.CallAndroidFunctionReturn(System.String,System.Boolean,System.Object[])">
            <summary>
            调用有返回值有参数的Android方法 isStatic 为是否调用静态方法 返回类型为string中间以逗号隔开 主Activity下
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AndroidPostman.CallAndroidFunctionReturn``1(System.String,System.Boolean,System.Object[])">
            <summary>
            调用有返回值有参数的Android方法 isStatic 为是否调用静态方法 主Activity下
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AndroidPostman.CallAndroidFunctionReturn``1(System.String,System.String,System.String,System.Boolean,System.Object[])">
            <summary>
            调用有返回值有参数的Android方法 isStatic 为是否调用静态方法
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.AndroidPostman.Receivedel">
            <summary>
            接收代理定义
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.AndroidPostman.receivedel">
            <summary>
            接收代理
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.AndroidPostman.ReceiveAndroidMessage(System.String)">
            <summary>
            接收Android的信息 消息是以逗号分隔的字符串 第一条消息为命令码标示自定义
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.IosHelper">
            <summary>
            ios助手
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosHelper.Paste">
            <summary>
            粘贴
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.IosHelper.Copy(System.String)">
            <summary>
            复制
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:YxFramwork.Tool.IosIAP">
            <summary>
            苹果应用内支付IAP
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.IosIAP._paySuccess">
            <summary>
            支付成功回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.IosIAP._payFailed">
            <summary>
            支付失败回调
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosIAP.OnReceiveIosInfo(System.String)">
            <summary>
            当接收到ios的消息
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosIAP.IapPay(System.String,System.Action{System.String},System.Action{System.String})">
            <summary>
            iap支付
            </summary>
            <param name="id"></param>
            <param name="success">成功回调</param>
            <param name="failed">失败回调</param>
        </member>
        <member name="M:YxFramwork.Tool.IosIAP.PaymentFailed(System.String)">
            <summary>
            计费失败回调
            </summary>
            <param name="msg">失败信息可为空</param>
            <param name="closeIndex"></param>
        </member>
        <member name="M:YxFramwork.Tool.IosIAP.PaymentSuccess(System.String)">
            <summary>
            计费成功回调 
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:YxFramwork.Tool.IosPostman">
            <summary>
            Ios计费类 单例 2016年3月17日10:08:32
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.InitUnityInfo(System.String,System.String)">
            <summary>
            初始化wechat回数据信息
            </summary>
            <param name="gameObject"></param>
            <param name="method"></param>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.InitWechat(System.String)">
            <summary>
            讲appID注册到微信
            </summary>
            <param name="appId"></param>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.LoginWechat">
            <summary>
            登录到微信
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.IsInstalledWechat">
            <summary>
            检查是否安装了微信
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.IsChcekWechatApiLevel">
            <summary>
            检查微信的版本时否支持sdk的最低要求
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.ShareContent(System.String)">
            <summary>
            微信分享
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.WXPayment(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            微信支付
            </summary>
            <param name="appid">微信appid</param>
            <param name="partnerid">商户id</param>
            <param name="prepayid">交易id</param>
            <param name="packageV">包名</param>
            <param name="nonce">随机数</param>
            <param name="time">时间戳</param>
            <param name="sign">签名</param>
        </member>
        <member name="F:YxFramwork.Tool.IosPostman._reqId">
            <summary>
            请求计数
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.IosShareContent(System.String)">
            <summary>
            ios微信分享
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.InitToolsListener(System.String,System.String)">
            <summary>
            初始化RoomListener回数据信息
            </summary>
            <param name="gameObject"></param>
            <param name="method"></param>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.InitPayment(System.String,System.String)">
            <summary>
            初始化Payment
            </summary>
            <param name="gameObject"></param>
            <param name="method"></param>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.appPayment(System.String)">
            <summary>
            调用IAP计费
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.closeTransaction(System.Int32,System.Int32)">
            <summary>
            关闭IAP交易
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.SaveClipText(System.String)">
            <summary>
            保存剪切板中的文本信息
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.GetClipText">
            <summary>
            获得剪切板中的文本内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.GetSystemInfo">
            <summary>
            获取系统信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.UpdateFileState(System.String)">
            <summary>
            更新文件状态（文件系统广播）
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.IosPostman.Receivedel">
            <summary>
            接收代理定义
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.IosPostman.receivedel">
            <summary>
            接收代理
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.IosPostman.ReceiveIosMessage(System.String)">
            <summary>
            接收Android的信息 消息是以逗号分隔的字符串 第一条消息为命令码标示自定义
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.TencentApi">
            <summary>
            腾讯QQAPI类
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.TencentApi._qqAuthSuccess">
            <summary>
            授权登录成功回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.TencentApi._qqAuthFailed">
            <summary>
            授权登录失败回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.TencentApi._qqAuthCancel">
            <summary>
            授权登录取消回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.TencentApi._qqSendSuccess">
            <summary>
            分享成功回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.TencentApi._qqSendCancel">
            <summary>
            分享取消回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.TencentApi._qqSendFailed">
            <summary>
            分享失败回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.TencentApi.AppId">
            <summary>
            QQAppID
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.TencentApi.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.TencentApi.InitTencent">
            <summary>
            初始化QQ 分享和登陆之前调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.TencentApi.InitTencent(System.String)">
            <summary>
            初始化QQ 分享和登陆之前调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.TencentApi.AuthTencent(System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            调用微信授权
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.TencentApi.ShareContent(YxFramwork.Tool.ShareInfo,System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            调用微信分享
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.TencentApi.ReceiveInfo(System.String)">
            <summary>
            QQ回调
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:YxFramwork.Tool.TencentApi.NeedTencent">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Tool.WeChatApi">
            <summary>
            微信api相关方法
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._receiveCode">
            <summary>
            接收code代理
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._userCancel">
            <summary>
            用户取消代理
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._authFailed">
            <summary>
            授权失败代理
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._paySuccess">
            <summary>
            支付成功回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._payFailed">
            <summary>
            支付失败回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._payCancel">
            <summary>
            支付取消回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi.AppId">
            <summary>
            微信AppID
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._bundleIdentifier">
            <summary>
            bid
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi.BatteryAction">
            <summary>
            电量监听,赋值此回调 float0为电量 float1为总电量
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._reqId">
            <summary>
            请求Id
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._sendSuccess">
            <summary>
            分享成功回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._sendCancel">
            <summary>
            分享取消回调
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.WeChatApi._sendFailed">
            <summary>
            分享失败回调
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.InitWechat">
            <summary>
            初始化微信
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.InitWechat(System.String)">
            <summary>
            初始化微信 分享和登陆之前调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.NeedWechat">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.AuthWechat(YxFramwork.Tool.AndroidPostman.Receivedel,YxFramwork.Tool.AndroidPostman.Receivedel,YxFramwork.Tool.AndroidPostman.Receivedel)">
            <summary>
            调用微信授权
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.IsInstalledWechat">
            <summary>
            是否已经安装微信
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.IsCheckWechatApiLevel">
            <summary>
            是否符合微信api要求的微信最低版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.ShareContent(YxFramwork.Tool.ShareInfo,System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            调用微信分享
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.Payment(YxFramwork.Tool.PayInfo,System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            调用微信支付
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.ReceiveInfo(System.String)">
            <summary>
            总接收回调方法
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:YxFramwork.Tool.WeChatApi.CheckWechatValidity">
            <summary>
            检查
            </summary>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Tool.PayInfo">
            <summary>
            支付信息类
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.PayInfo.AppId">
            <summary>
            微信appid
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.PayInfo.PartnerId">
            <summary>
            微信商户id
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.PayInfo.PrepayId">
            <summary>
            微信交易id
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.PayInfo.PackageValue">
            <summary>
            自定义扩展 值Sign=WXPay
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.PayInfo.NonceStr">
            <summary>
            随机字符串
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.PayInfo.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.PayInfo.Sign">
            <summary>
            md5签名
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.PayInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            微信支付数据
            </summary>
            <param name="appId">微信appid</param>
            <param name="partnerId">微信商户id</param>
            <param name="prepayId">微信交易id</param>
            <param name="packageV">自定义扩展 值Sign=WXPay</param>
            <param name="nonce">随机字符串</param>
            <param name="timeStamp">时间戳</param>
            <param name="sign">md5签名</param>
        </member>
        <member name="T:YxFramwork.Tool.ShareInfo">
            <summary>
            分享信息类
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.ShareInfo.ShareData">
            <summary>
            分享数据
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.ShareInfo.#ctor(System.String,System.String,System.String,System.String,YxFramwork.Tool.ShareType,YxFramwork.Tool.SharePlat,System.String,System.String)">
            <summary>
            微信分享的信息
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="url">网页地址</param>
            <param name="imageurl">图片地址</param>
            <param name="shareType">分享类型 enum ShareType</param>
            <param name="sharePlat">分享场景 enum WechatSence</param>
            <param name="musicUrl">音频地址</param>
            <param name="videoUrl">视频地址</param>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.Title">
            <summary>
            分享标题
            </summary>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.Content">
            <summary>
            分享内容
            </summary>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.Url">
            <summary>
            分享链接
            </summary>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.MusicUrl">
            <summary>
            分享音频地址
            </summary>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.VideoUrl">
            <summary>
            分享视频地址
            </summary>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.ImageUrl">
            <summary>
            分享图片地址
            </summary>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.ShareType">
            <summary>
            分享类型
            </summary>
        </member>
        <member name="P:YxFramwork.Tool.ShareInfo.Plat">
            <summary>
            分享场景
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.ShareType">
            <summary>
            分享类型
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.ShareType.Text">
            <summary>
            文本类型
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.ShareType.Image">
            <summary>
            图片类型
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.ShareType.Music">
            <summary>
            音乐类型
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.ShareType.Video">
            <summary>
            视频类型
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.ShareType.Website">
            <summary>
            网址
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.SharePlat">
            <summary>
            分享平台
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.SharePlat.WxSenceSession">
            <summary>
            微信会话
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.SharePlat.WxSenceTimeLine">
            <summary>
            微信朋友圈
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.SharePlat.WxSenceFavorite">
            <summary>
            微信收藏
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.SharePlat.QQSenceSession">
            <summary>
            QQ会话
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.SharePlat.QQSenceQzone">
            <summary>
            QQ空间
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.YxGameTools">
            <summary>
            游戏工具类
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.YxGameTools.HrefAction">
            <summary>
            超链接启动app，传递过来的信息
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.YxGameTools.keyHrefInfo">
            <summary>
            Url传递指令
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.YxGameTools._keySaveFunc">
            <summary>
            保存剪切板内容指令(安卓)
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.YxGameTools._keyGetFunc">
            <summary>
            获取剪切板内容指令(安卓)
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.YxGameTools._keyFreshFileStateFunc">
            <summary>
            刷新文件状态（文件广播，安卓）
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.YxGameTools.OnReciveInfo(System.String)">
            <summary>
            收到对应平台的信息回调
            </summary>
            <param name="roomUri"></param>
        </member>
        <member name="P:YxFramwork.Tool.YxGameTools.PasteBoard">
            <summary>
            剪切板（文本剪切板，看安卓和IOS平台还支持其它格式的剪切板，如图片，待扩展）
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.YxGameTools.RefreshFileState(System.String)">
            <summary>
            刷新文件状态（刷新游戏截图在相册中的状态）
            </summary>
            <param name="path">截图路径</param>
        </member>
        <member name="T:YxFramwork.Tool.YxSysteminfo">
            <summary>
            系统设备信息
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.StorageInfo">
            <summary>
            磁盘信息类
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.StorageInfo.Desc">
            <summary>
            磁盘描述
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.StorageInfo.TotalBlock">
            <summary>
            总空间
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.StorageInfo.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.StorageInfo.IsRemovable">
            <summary>
            是否可移除（内置SD卡还是外置SD卡）
            </summary>
        </member>
        <member name="F:YxFramwork.Tool.StorageInfo.FreeBlock">
            <summary>
            剩余空间
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.YxUtiles">
            <summary>
            工具类
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.YxUtiles.GetShowNumber(System.Int64,System.Int32)">
            <summary>
            显示的数字
            </summary>
            <param name="value"></param>
            <param name="valid"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.YxUtiles.RecoverShowNumber(System.Double)">
            <summary>
            显示的数字
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.YxUtiles.ReduceNumber(System.Int64,System.Int32,System.Boolean)">
            <summary>
            压缩数字
            </summary>
            <returns></returns>
        </member>
        <member name="T:YxFramwork.Tool.AsyncImage">
            <summary>
            异步加载网上图片（单例类）
            </summary> 
        </member>
        <member name="P:YxFramwork.Tool.AsyncImage.Instance">
            <summary>
            构建单例
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.AsyncImage.GetAsyncImage(System.String,System.Action{UnityEngine.Texture2D})">
            <summary>
            获取图片
            </summary>
            <param name="url"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:YxFramwork.Tool.DirectoryTool.MoveFolderTo(System.String,System.String)">
            <summary>
            从一个目录将其内容移动到另一目录  
            </summary>
            <param name="directorySource">源目录</param>
            <param name="directoryTarget">目标目录</param>
        </member>
        <member name="M:YxFramwork.Tool.DirectoryTool.CopyDir(System.String,System.String)">
            <summary>
            将整个文件夹复制到目标文件夹中。
            </summary>
            <param name="srcPath">源文件夹</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="T:YxFramwork.Tool.IDictionaryExtention">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.ByteArray.WriteByte(System.Byte)">
            Function from AS3--add a byte to our stream
        </member>
        <member name="M:YxFramwork.Tool.ByteArray.GetAllBytes">
            Spit back all bytes--to either pass via WWW or save to disk
        </member>
        <member name="T:YxFramwork.Tool.BitString">
            This should really be a struct--if you care, declare it in C#
        </member>
        <member name="T:YxFramwork.Tool.BitmapData">
            Another flash class--emulating the stuff the encoder uses
        </member>
        <member name="M:YxFramwork.Tool.BitmapData.#ctor(UnityEngine.Color[],System.Int32,System.Int32)">
            Pull all of our pixels off the texture (Unity stuff isn't thread safe, and this is faster)
        </member>
        <member name="M:YxFramwork.Tool.BitmapData.GetPixelColor(System.Int32,System.Int32)">
            Mimic the flash function
        </member>
        <member name="T:YxFramwork.Tool.JpgEncoder">
            Class that converts BitmapData into a valid JPEG
        </member>
        <member name="M:YxFramwork.Tool.JpgEncoder.GetBytes">
            Get the result
        </member>
        <member name="F:YxFramwork.Tool.JpgEncoder.IsDone">
             Constructor for JPEGEncoder class
            
             @param quality The quality level between 1 and 100 that detrmines the
             level of compression used in the generated JPEG
             @langversion ActionScript 3.0
             @playerversion Flash 9.0
             @tiptext
        </member>
        <member name="M:YxFramwork.Tool.JpgEncoder.DoEncoding">
            Handle our initialization and encoding
        </member>
        <member name="M:YxFramwork.Tool.JpgEncoder.Encode">
             Created a JPEG image from the specified BitmapData
            
             @param image The BitmapData that will be converted into the JPEG format.
             @return a ByteArray representing the JPEG encoded image data.
             @langversion ActionScript 3.0
             @playerversion Flash 9.0
             @tiptext
        </member>
        <member name="T:YxFramwork.Tool.LoadSencesTool">
            <summary>
            加载场景工具类
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.LoadSencesTool.LoadSceneSuccess">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.Awake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.StartLoadSceneAsync(System.Boolean,YxFramwork.Tool.LoadSencesTool.LoadSceneSuccess)">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.LoadSences(System.String)">
            <summary>
            加载场景
            </summary>
            <param name="sencesName">场景名称</param>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.LoadSceneAsync(System.String,System.Boolean)">
            <summary>
            异步加载场景
            </summary>
            <param name="sencesName"></param>
            <param name="allowActivation"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.PreloadingScene(System.String)">
            <summary>
            
            </summary>
            <param name="sencesName"></param>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.LoadPreloadingScene">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.LoadGame(System.String)">
            <summary>
            加载游戏
            </summary>
            <param name="gameName"></param>
        </member>
        <member name="M:YxFramwork.Tool.LoadSencesTool.GcLastData(System.String)">
            <summary>
            清理上一个数据
            </summary>
        </member>
        <member name="T:YxFramwork.Tool.ZipHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.Tool.ZipHelper.StopDecompress">
            <summary>
            停止解压
            </summary>
        </member>
        <member name="T:YxFramwork.View.CurtainView">
            <summary>
            幕布
            切换场景时用
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView.WaitState">
            <summary>
            等待样式
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView.ProgressState">
            <summary>
            进度条样式
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView.Tips">
            <summary>
            提示
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView.TipTime">
            <summary>
            轮播时间
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView._message">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView._progress">
            <summary>
            进度
            </summary>
        </member>
        <member name="M:YxFramwork.View.CurtainView.ChangeState(YxFramwork.View.CurtainView.CurtainState)">
            <summary>
            切换状态
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:YxFramwork.View.CurtainView.SetInfo(System.Single,System.String)">
            <summary>
            设置信息
            </summary>
            <param name="progress">进度</param>
            <param name="msg">信息</param>
        </member>
        <member name="M:YxFramwork.View.CurtainView.FreshTip(System.String)">
            <summary>
            刷新tip
            </summary>
            <param name="tipMsg"></param>
        </member>
        <member name="M:YxFramwork.View.CurtainView.FreshCamera">
            <summary>
            刷新相机，使幕布显示与当前的相机下
            </summary>
        </member>
        <member name="M:YxFramwork.View.CurtainView.UpdateInfo(System.Single,System.String)">
            <summary>
            更新信息
            </summary>
            <param name="progress"></param>
            <param name="msg"></param>
        </member>
        <member name="M:YxFramwork.View.CurtainView.CurtainCall">
            <summary>
            实现关闭效果(每帧执行)
            </summary>
        </member>
        <member name="M:YxFramwork.View.CurtainView.ReadyCurtainCall">
            <summary>
            准备关闭
            </summary>
        </member>
        <member name="T:YxFramwork.View.CurtainView.CurtainState">
            <summary>
            模式
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView.CurtainState.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView.CurtainState.Progress">
            <summary>
            进度模式
            </summary>
        </member>
        <member name="F:YxFramwork.View.CurtainView.CurtainState.Wait">
            <summary>
            等待模式
            </summary>
        </member>
        <member name="T:YxFramwork.View.TaskBasseView">
            <summary>
            任务视图
            </summary>
        </member>
        <member name="F:YxFramwork.View.TaskBasseView.NormalState">
            <summary>
            绑定模式
            </summary>
        </member>
        <member name="F:YxFramwork.View.TaskBasseView.FinishState">
            <summary>
            解绑模式
            </summary>
        </member>
        <member name="M:YxFramwork.View.TaskBasseView.ChangeState(System.Boolean)">
            <summary>
            切换状态
            </summary>
            <param name="hasBind"></param>
        </member>
        <member name="M:YxFramwork.View.TaskBasseView.InitNormaState">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.TaskBasseView.InitFinishState">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.TaskBasseView.ShowInfos(System.Object,System.String,System.Int32)">
            <summary>
            信息弹窗
            </summary>
            <param name="obj"></param>
            <param name="defaultMsg"></param>
            <param name="delayed"></param>
        </member>
        <member name="T:YxFramwork.View.YxCarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxCarrier.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxChitChat">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxChitChat.AddChatRecord(Sfs2X.Entities.Data.ISFSObject)">
            <summary>
            添加聊天记录
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxListItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListItem.Index">
            <summary>
            序号,与顺序挂钩
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListItem.DataId">
            <summary>
            数据id
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListItem._curState">
            <summary>
            当前位置的信息
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListItem.SetData(YxFramwork.View.IItemData)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:YxFramwork.View.YxListItem.OnChangeData(YxFramwork.View.IItemData)">
            <summary>
            数据改变时调用
            </summary>
            <param name="newData">新数据,此时还未给Data赋值</param>
        </member>
        <member name="M:YxFramwork.View.YxListItem.SetOrder(System.Int32)">
            <summary>
            设置层次 
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:YxFramwork.View.YxListItem.AwakAction(System.Boolean)">
            <summary>
            激活动作
            </summary>
            <param name="isAction"></param>
        </member>
        <member name="M:YxFramwork.View.YxListItem.SetColor(UnityEngine.Color)">
            <summary>
            设置颜色
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:YxFramwork.View.YxListItem.SetShowState(System.Boolean)">
            <summary>
            是否显示
            </summary>
            <param name="isShow"></param>
        </member>
        <member name="M:YxFramwork.View.YxListItem.Init(UnityEngine.Color,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="color">位置</param>
            <param name="index">索引</param>
            <param name="order">层</param>
            <param name="action">是否允许激活</param>
            <param name="isShow">是否显示</param>
        </member>
        <member name="T:YxFramwork.View.YxListItem.ListItemState">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.View.IItemData">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:YxFramwork.View.IItemView">
            <summary>
            item内的自定样式定义
            有关item定义写在这里,并在YxListPoint添加对应的属性
            YxListView类中的InterchangeItem方法中,调用该方法,并传入YxListPoint属性
            当item移动到下一个point ,将会被调用这些方法
            </summary>
        </member>
        <member name="M:YxFramwork.View.IItemView.AwakAction(System.Boolean)">
            <summary>
            播放动画
            </summary>
        </member>
        <member name="M:YxFramwork.View.IItemView.SetColor(UnityEngine.Color)">
            <summary>
            设置颜色
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:YxFramwork.View.IItemView.SetShowState(System.Boolean)">
            <summary>
            是否显示
            </summary>
            <param name="isShow"></param>
        </member>
        <member name="T:YxFramwork.View.YxListPoint">
            <summary>
            list使用的占位符以及其他信息
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListPoint.RColor">
            <summary>
            相关颜色
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListPoint.Order">
            <summary>
            所在层
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListPoint.IsAction">
            <summary>
            是否激活,可以用来此判断来激活动画等特定内容
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListPoint.IsShow">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="T:YxFramwork.View.TalkBase">
            <summary>
            基础聊天窗口。继承 and 实现，就能聊天
            </summary>
        </member>
        <member name="M:YxFramwork.View.TalkBase.OnUserTalk(System.Object)">
            <summary>
            接收到服务器的数据。添加聊天内容
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:YxFramwork.View.TalkBase.ShowQuickMsg(System.Int32,System.String,System.Int32)">
            <summary>
            接收到快速短语/常用语
            </summary>
            <param name="id">短语/常用语ID</param>
            <param name="fromU">消息来源</param>
            <param name="seat">座位号</param> 
        </member>
        <member name="M:YxFramwork.View.TalkBase.ShowEmoj(System.String,System.String,System.Int32)">
            <summary>
            表情
            </summary>
            <param name="emoj">表情</param>
            <param name="fromU">消息来源</param>
            <param name="seat">座位号</param> 
        </member>
        <member name="M:YxFramwork.View.TalkBase.ShowTalk(System.String,System.String,System.Int32)">
            <summary>
            接收到用户聊天
            </summary>
            <param name="text">聊天内容</param>
            <param name="fromU">消息来源</param>
            <param name="seat">座位号</param> 
        </member>
        <member name="M:YxFramwork.View.TalkBase.SendText(System.String,System.Int32)">
            <summary>
            发送聊天信息
            </summary>
            <param name="value">文本消息</param>
            <param name="seat">座位号</param> 
        </member>
        <member name="M:YxFramwork.View.TalkBase.SendEmoji(System.String,System.Int32)">
            <summary>
            发送表情
            </summary>
            <param name="value">表情值</param>
            <param name="seat">座位号</param> 
        </member>
        <member name="M:YxFramwork.View.TalkBase.SendQuickMsg(System.Int32,System.Int32)">
            <summary>
            发送常用语
            </summary>
            <param name="id">常用语ID</param> 
            <param name="seat">座位号</param> 
        </member>
        <member name="M:YxFramwork.View.TalkBase.SendTalk(Sfs2X.Entities.Data.ISFSObject,System.Int32)">
            <summary>
            发送聊天消息
            </summary>
            <param name="data">聊天消息数据</param>
            <param name="seat">座位号</param>
        </member>
        <member name="M:YxFramwork.View.TalkBase.Colse">
            <summary>
            关闭聊天窗口
            </summary>
        </member>
        <member name="M:YxFramwork.View.TalkBase.Open">
            <summary>
            打开聊天窗口
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxListView">
            <summary>
            多个item 显示视图
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView._mainCamera">
            <summary>
            场景的主摄像机,一般会自己找到,也可以自行指定
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.Row">
            <summary>
            行数
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.CancelDragIfFits">
            <summary>
            数据不够时不可以滑动
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.Loop">
            <summary>
            循环
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.CancelMove">
            <summary>
            取消移动
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.Positions">
            <summary>
            位置
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.PerfabItem">
            <summary>
            item的预制体
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxListView.EMoveMent">
            <summary>
            方向枚举
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.EMoveMent.Vertical">
            <summary>
            垂直
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.EMoveMent.Horizontal">
            <summary>
            水平
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.MoveMent">
            <summary>
            方向
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.HoldDistance">
            <summary>
            滑动的距离相关
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView._lines">
            <summary>
            Item数组
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView._startPosition">
            <summary>
            开始位置
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView._pointColumn">
            <summary>
            列
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView._moveTotalCount">
            <summary>
            移动的总数
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxListView.EState">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.EState.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.EState.Moving">
            <summary>
            移动
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.EState.BackMove">
            <summary>
            归位
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.EState.ForwardMoving">
            <summary>
            正向归位
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.EState.ReverseMoving">
            <summary>
            反向归位
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.OnAwake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.OnStart">
            <inheritdoc />
        </member>
        <member name="M:YxFramwork.View.YxListView.OnGetDir">
            <summary>
            获得方向
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.OnDisable">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.GetState">
            <summary>
            状态
            </summary>
            <returns></returns>
        </member>
        <member name="F:YxFramwork.View.YxListView._curOffset">
            <summary>
            当前的偏移量
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.BackSpeed">
            <summary>
            速度
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.BackMove">
            <summary>
            归位移动
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.ReverseMoving">
            <summary>
            反向移动 大于 0.5
            </summary> 
        </member>
        <member name="M:YxFramwork.View.YxListView.ForwardMoving">
            <summary>
            正向移动 小于 0.5
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.Move(System.Single)">
            <summary>
            移动
            </summary>
            <param name="offset">偏移量</param>
        </member>
        <member name="M:YxFramwork.View.YxListView.InterchangeItem(YxFramwork.View.YxListItem,System.Int32,System.Single,System.Int32)">
            <summary>
            替换俩item位置
            </summary>
            <param name="item"></param>
            <param name="index">索引</param>
            <param name="rate">比率</param>
            <param name="order">层</param>
        </member>
        <member name="M:YxFramwork.View.YxListView.GetForwardOffset(System.Single,System.Int32@,System.Single@)">
            <summary>
            获取偏移量相关数据
            </summary>
            <param name="offset">鼠标偏移量</param>
            <param name="moveCount">移动的个数</param>
            <param name="rate">移动的偏移量</param>
        </member>
        <member name="M:YxFramwork.View.YxListView.OnVerticalMoving(System.Single)">
            <summary>
            移动中
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.ChangePosition(System.Int32,System.Single)">
            <summary>
            更改位置
            </summary>
            <param name="moveCount">移动个数(矢量)</param>
            <param name="rate">倆点的所在比值</param>
        </member>
        <member name="M:YxFramwork.View.YxListView.CheckValidity(System.Int32@,System.Single@,System.Boolean)">
            <summary>
            检查边界
            </summary>
            <param name="moveCount"></param>
            <param name="rate"></param>
            <param name="dir"></param>
            <returns>大于0：向右，等于0：不移动，小于0：向左</returns>
        </member>
        <member name="F:YxFramwork.View.YxListView.StateInfo.MaxColumn">
            <summary>
            最大列数
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.StateInfo.PageCount">
            <summary>
            页数
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.StateInfo.InPageCount">
            <summary>
            一页的总个数
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.StateInfo.PageColumn">
            <summary>
            每组有几个列
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.StateInfo.VisualColumn">
            <summary>
            可视范围
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.StateInfo.ItemColumn">
            <summary>
            item的列数
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxListView.StateInfo.DataCount">
            <summary>
            数据的个数
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.GetPointIndex(System.Int32,System.Int32)">
            <summary>
            求出第row行第index的数组索引
            </summary>
            <param name="row"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.View.YxListView.OnFreshView">
            <inheritdoc />
        </member>
        <member name="F:YxFramwork.View.YxListView.KeepLastState">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.Resetting">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.CreateItem(UnityEngine.Transform)">
            <summary>
            创建item
            </summary>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="F:YxFramwork.View.YxListView._itemsContainer">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.CreateItems">
            <summary>
            创建Item
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.OnReverseMoving">
            <summary>
            向左按钮事件
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxListView.OnForwardMoving">
            <summary>
            向右按钮事件
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxListView.LineInfo">
            <summary>
            行信息
            </summary>
        </member>
        <member name="T:YxFramwork.View.OnClickListener">
            <summary>
            点击事件委托
            </summary>
            <param name="boxMsg"></param>
            <param name="btnName"></param>
        </member>
        <member name="T:YxFramwork.View.OnEndDelayedEvent">
            <summary>
            延时操作委托
            </summary>
            <param name="boxMsg"></param>
        </member>
        <member name="T:YxFramwork.View.YxMessageBox">
            <summary>
            弹框
            资源规则
            标题文本:Label_Title
            内容文本:Label_Content
            按钮:Btn_Left、Btn_Middle、Btn_Right
            其他按钮:可以自己添加按钮,如果这么做就需要在资源中关联OnBtnClick
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.BtnMiddle">
            <summary>
            中间按钮的名称
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.BtnLeft">
            <summary>
            左边按钮的名称
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.BtnRight">
            <summary>
            右边按钮的名称
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.MinWidth">
            <summary>
            最小宽度
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.MiddleBtnStyle">
            <summary>
            ok：确定按钮
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.RightBtnStyle">
            <summary>
            Yes：是按钮
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.LeftBtnStyle">
            <summary>
            No：否按钮
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.BtnStyle">
            <summary>
            按钮样式
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.Delayed">
            <summary>
            持续时间
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.OnBtnClickListener">
            <summary>
            按钮监听事件
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.OnCloseEvent">
            <summary>
            自动关闭事件
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.Message">
            <summary>
            显示内容
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.MsgLabelAdapter">
            <summary>
            显示信息的文本框
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.TitleLabelAdapter">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.MiddleBtn">
            <summary>
            ok按钮
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.RightBtn">
            <summary>
            yes按钮
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.LeftBtn">
            <summary>
            no按钮
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.CloseBtn">
            <summary>
            关闭按钮
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBox.DefStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.InitText(System.String)">
            <summary>
            给Message赋值
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.SetMessage(System.String,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="isDynamic"></param>
            <param name="dotCount"></param>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.Show(System.String,System.String,YxFramwork.View.OnClickListener,System.Boolean,System.Int32,YxFramwork.Framework.YxWindow,System.Int32)">
            <summary>
            显示弹框
            </summary>
            <param name="msg">内容</param>
            <param name="title">标题</param>
            <param name="listener">监听</param>
            <param name="isTopSHow">是否优先显示</param>
            <param name="btnStyle">按钮样式</param> 
            <param name="style">弹框样式(默认为大厅弹框样式)</param>
            <param name="delayed">延时</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.Show(YxFramwork.View.YxMessageBoxData)">
            <summary>
            显示弹框
            </summary>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.DynamicShow(System.String,System.String,YxFramwork.View.OnClickListener,System.Boolean,System.Int32,YxFramwork.Framework.YxWindow,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="title"></param>
            <param name="listener"></param>
            <param name="isTopSHow"></param>
            <param name="btnStyle"></param>
            <param name="style"></param>
            <param name="delayed"></param>
            <param name="dotCount"></param>
            <param name="winName"></param>
            <param name="context"></param>
            <param name="bundleName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.DynamicShow(YxFramwork.View.YxMessageBoxData)">
            <summary>
            
            </summary> 
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.StartDynamic(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.Show(System.String,System.String,System.String,System.String,YxFramwork.View.OnClickListener,System.Boolean,System.Int32,System.String,System.Int32)">
            <summary>
            显示弹框
            </summary>
            <param name="context">弹框样式资源所在游戏名称</param>
            <param name="winName">资源名称</param>
            <param name="msg">内容</param>
            <param name="title">标题</param>
            <param name="listener">监听</param>
            <param name="isTopSHow">是否优先显示</param>
            <param name="btnStyle">按钮样式</param>
            <param name="bundleName"></param>
            <param name="delayed">延时</param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.Show(System.String,System.Int32,YxFramwork.View.OnClickListener,System.Int32,YxFramwork.View.OnEndDelayedEvent,System.String,YxFramwork.Framework.YxWindow,System.Boolean)">
            <summary>
            显示（倒计时）
            </summary>
            <param name="msg">显示内容</param>
            <param name="listener">监听事件</param>
            <param name="btnStyle">按钮样式</param>
            <param name="delayed">演示关闭</param>
            <param name="title">标题</param>
            <param name="style">样式</param>
            <param name="onEndDelayedEvent"></param>
            <param name="isTopShow"></param> 
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.Show(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="delayed"></param>
            <param name="winName"></param>
            <returns></returns>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.OnBtnClick(UnityEngine.GameObject)">
            <summary>
            监听事件
            </summary>
            <param name="btn"></param>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.OnBtnClickTk2D(UnityEngine.GameObject)">
            <summary>
            </summary>
            <param name="btn"></param>
        </member>
        <member name="M:YxFramwork.View.YxMessageBox.OnBtnClickTk2D">
            <summary>
            此方法是为了tk2d框架，tk2d按钮只支持无参方法，获取方法名后，再通过SendMessage发送有参的方法。
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxMessageBoxData">
            <summary>
            弹框数据
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.CreateInfo">
            <summary>
            创建信息
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.Msg">
            <summary>
            要显示的内容消息
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.Listener">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.BtnStyle">
            <summary>
            按钮样式
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.IsTopShow">
            <summary>
            是否最顶层
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.DotCount">
            <summary>
            点的个数
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.ShowBtnNames">
            <summary>
            要显示的按钮名字
            数组长度为  1：中间按钮，2：两边有按钮，3：三个按钮
            按钮名称格式： sprite名称|显示名称    （sprite名称：图集里的sprite名字，显示名称：如果没有找到图集的名称，将显示的名称）
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.Delayed">
            <summary>
            延时关闭，自动关闭
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.OnEndDelayedEvent">
            <summary>
            延时结束事件
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxData.DelayedShowBtn">
            <summary>
            延时显示按钮
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxMessageBoxCreateData">
            <summary>
            创建信息
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxCreateData.WinName">
            <summary>
            窗口资源名称
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxCreateData.BundleName">
            <summary>
            资源bundle名字
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxCreateData.Context">
            <summary>
            上下文，资源的文件夹
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxMessageBoxCreateData.Style">
            <summary>
            窗口样式
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxNoticeMessage">
            <summary>
            消息跑马灯公告
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.MessageQueue">
            <summary>
            消息级
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.MoveList">
            <summary>
            移动集
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.Speed">
            <summary>
            移动速度
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.Distance">
            <summary>
            前后间距
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.PerfabLabel">
            <summary>
            预制：文字
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.BufferPoolMaxCount">
            <summary>
            最大缓存数
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.BackGround">
            <summary>
             背景
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.DefaultLabelColor">
            <summary>
            label默认颜色
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage.ShowType">
            <summary>
            显示类型
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxNoticeMessage.OnAwake">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxNoticeMessage.OnStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxNoticeMessage.ReadyNew">
            <summary>
            读取新的信息
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage._lastDistance">
            <summary>
            最后移动的间距
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxNoticeMessage.ToMove">
            <summary>
            移动消息
            </summary>
            <returns>有安全距离</returns>
        </member>
        <member name="M:YxFramwork.View.YxNoticeMessage.ShowNoticeMsg(YxFramwork.View.YxNoticeMessageData)">
            <summary>
            显示消息
            </summary>
            <param name="msgData">内容</param>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessage._loopTime">
            <summary>
            循环时间
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxNoticeMessage.ShowLoopNoticeMsg(YxFramwork.View.YxNoticeMessageData,System.Int32)">
            <summary>
            显示循环消息
            </summary>
            <param name="msgData">内容</param>
            <param name="time"></param>
        </member>
        <member name="M:YxFramwork.View.YxNoticeMessage.ShowLoopNoticeMsgs(YxFramwork.View.YxNoticeMessageData[],System.Int32)">
            <summary>
            显示循环消息
            </summary>
            <param name="messageDatas"></param>
            <param name="time"></param>
        </member>
        <member name="T:YxFramwork.View.YxNoticeMessageData">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessageData.Id">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessageData.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessageData.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessageData.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessageData.ShowType">
            <summary>
            显示类型
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxNoticeMessageData.MsgFormat">
            <summary>
            格式
            </summary>
        </member>
        <member name="P:YxFramwork.View.YxNoticeMessageData.HasColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:YxFramwork.View.YxNoticeMessageData.DefaultColor">
            <summary>
            默认颜色
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxPushMessage">
            <inheritdoc />
            <summary>
            推送消息
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.MessageLabe">
            <summary>
            消息文本
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.Spacing">
            <summary>
            间距 x:上 y:下 
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.Speed">
            <summary>
            速度
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.WaitUnitTime">
            <summary>
            等待时间
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.MessageQueue">
            <summary>
            消息级
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.OnAwake">
            <inheritdoc />
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.CurState">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.Update">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.Check">
            <summary>
            检查
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.Backing">
            <summary>
            返回
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.Showing">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.Poping">
            <summary>
            弹出
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.ShowPushMessage(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:YxFramwork.View.YxPushMessage.ShowPushMessage(YxFramwork.View.YxPushMessageData)">
            <summary>
            
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxPushMessage.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.State.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.State.Pop">
            <summary>
            弹出
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.State.Show">
            <summary>
            显示
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.State.Back">
            <summary>
            返回
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessage.State.Wait">
            <summary>
            等待
            </summary>
        </member>
        <member name="T:YxFramwork.View.YxPushMessageData">
            <summary>
            
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessageData.Message">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:YxFramwork.View.YxPushMessageData.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:YxFramwork.GDGeek.Tweener.IgnoreTimeScale.realTime">
            <summary>
            Real time of the last time UpdateRealTimeDelta() was called.
            </summary>
        </member>
        <member name="P:YxFramwork.GDGeek.Tweener.IgnoreTimeScale.realTimeDelta">
            <summary>
            Equivalent of Time.deltaTime not affected by timeScale, provided that UpdateRealTimeDelta() was called in the Update().
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.IgnoreTimeScale.OnEnable">
            <summary>
            Clear the started flag;
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.IgnoreTimeScale.UpdateRealTimeDelta">
            <summary>
            Update the 'realTimeDelta' parameter. Should be called once per frame.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.onFinished">
            <summary>
            Delegate for subscriptions. Faster than using the 'eventReceiver' and allows for multiple receivers.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.method">
            <summary>
            Tweening method used.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.style">
            <summary>
            Does it play once? Does it loop?
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.animationCurve">
            <summary>
            Optional curve to apply to the tween's time factor value.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.doTimeScale">
            <summary>
            Whether the tween will ignore the timescale, making it work while the game is paused.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.delay">
            <summary>
            How long will the tweener wait before starting the tween?
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.duration">
            <summary>
            How long is the duration of the tween?
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.steeperCurves">
            <summary>
            Whether the tweener will use steeper curves for ease in / out style interpolation.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.tweenGroup">
            <summary>
            Used by buttons and tween sequences. Group of '0' means not in a sequence.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.eventReceiver">
            <summary>
            Target used with 'callWhenFinished', or this game object if none was specified.
            </summary>
        </member>
        <member name="F:YxFramwork.GDGeek.Tweener.Tween.callWhenFinished">
            <summary>
            Name of the function to call when the tween finishes.
            </summary>
        </member>
        <member name="P:YxFramwork.GDGeek.Tweener.Tween.amountPerDelta">
            <summary>
            Amount advanced per delta time.
            </summary>
        </member>
        <member name="P:YxFramwork.GDGeek.Tweener.Tween.tweenFactor">
            <summary>
            Tween factor, 0-1 range.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.Start">
            <summary>
            Update as soon as it's started so that there is no delay.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.Update">
            <summary>
            Update the tweening factor and call the virtual update function.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.OnDisable">
            <summary>
            Mark as not started when finished to enable delay on next play.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.Sample(System.Single,System.Boolean)">
            <summary>
            Sample the tween at the specified factor.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.BounceLogic(System.Single)">
            <summary>
            Main Bounce logic to simplify the Sample function
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.Play(System.Boolean)">
            <summary>
            Manually activate the tweening process, reversing it if necessary.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.Reset">
            <summary>
            Manually reset the tweener's state to the beginning.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.Toggle">
            <summary>
            Manually start the tweening process, reversing its direction.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.OnUpdate(System.Single,System.Boolean)">
            <summary>
            Actual tweening logic should go here.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.Tween.Begin``1(UnityEngine.GameObject,System.Single)">
            <summary>
            Starts the tweening operation.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.TweenAlpha.Begin(UnityEngine.GameObject,System.Single,System.Single)">
            <summary>
            Start the tweening operation.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.TweenGroupAlpha.Begin(UnityEngine.GameObject,System.Single,System.Single)">
            <summary>
            Start the tweening operation.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.TweenLocalPosition.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector3)">
            <summary>
            Start the tweening operation.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.TweenRotation.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Quaternion)">
            <summary>
            Start the tweening operation.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.TweenScale.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector3)">
            <summary>
            Start the tweening operation.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.TweenValue.Begin(UnityEngine.GameObject,System.Single,System.Single,System.Single,UnityEngine.GameObject,System.String)">
            <summary>
            Start the tweening operation.
            </summary>
        </member>
        <member name="M:YxFramwork.GDGeek.Tweener.TweenWorldPosition.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector3)">
            <summary>
            Start the tweening operation.
            </summary>
        </member>
    </members>
</doc>
